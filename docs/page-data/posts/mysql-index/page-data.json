{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/mysql-index/","result":{"data":{"asciidoc":{"id":"8ee5669f-3a3e-50ba-93d8-cf35be9f8fb6","html":"<div class=\"sect1\">\n<h2 id=\"_测试\"><a class=\"anchor\" href=\"#_测试\"></a>测试</h2>\n<div class=\"sectionbody\">\n<table class=\"tableblock frame-all grid-all stretch\">\n<colgroup>\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">table</th>\n<th class=\"tableblock halign-left valign-top\">storage</th>\n<th class=\"tableblock halign-left valign-top\">hash</th>\n<th class=\"tableblock halign-left valign-top\">index</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">test</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.24 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.34 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">test_1</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.06 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.00 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">KEY <code>index_test_1_on_storage</code> (<code>storage</code>)</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">test_2</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.06 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.81 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">UNIQUE KEY <code>index_test_2_on_storage_and_hash</code> (<code>storage</code>,<code>hash</code>)</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">test_3</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.46 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0.00 sec</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">UNIQUE KEY <code>index_test_3_on_storage_and_hash</code> (<code>hash</code>,<code>storage</code>)</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sql\" data-lang=\"sql\">select SQL_NO_CACHE count(*) from test where storage = 'host-1';\nselect SQL_NO_CACHE * from test where hash = '456b8268adbacc5fdfd9363000be956777fac06198fd65a4f1c066deff945421';</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>安装 MySQL</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">docker run --name mysql.test -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6\ndocker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql.test\nmysql -h 172.17.0.2 -uroot -p123456</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>创建 database</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sql\" data-lang=\"sql\">CREATE DATABASE test;\nCREATE USER 'test'@'172.17.0.1' IDENTIFIED BY '';\nGRANT ALL PRIVILEGES ON test.* TO 'test'@'172.17.0.1';</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>创建 table</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sql\" data-lang=\"sql\">DROP TABLE IF EXISTS `test`;\nCREATE TABLE `test` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `storage` varchar(255) NOT NULL,\n  `hash` varchar(255) NOT NULL,\n  `remark` varchar(255),\n  PRIMARY KEY (`id`)\n);\n\nDROP TABLE IF EXISTS `test_1`;\nCREATE TABLE IF NOT EXISTS `test_1` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `storage` varchar(255) NOT NULL,\n  `hash` varchar(255) NOT NULL,\n  `remark` varchar(255),\n  PRIMARY KEY (`id`),\n  KEY `index_test_1_on_storage` (`storage`),\n  UNIQUE KEY `index_test_1_on_hash` (`hash`)\n);\n\n\nDROP TABLE IF EXISTS `test_2`;\nCREATE TABLE IF NOT EXISTS `test_2` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `storage` varchar(255) NOT NULL,\n  `hash` varchar(255) NOT NULL,\n  `remark` varchar(255),\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `index_test_2_on_storage_and_hash` (`storage`,`hash`)\n);\n\nDROP TABLE IF EXISTS `test_3`;\nCREATE TABLE IF NOT EXISTS `test_3` (\n  `id` int NOT NULL AUTO_INCREMENT,\n  `storage` varchar(255) NOT NULL,\n  `hash` varchar(255) NOT NULL,\n  `remark` varchar(255),\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `index_test_3_on_storage_and_hash` (`hash`,`storage`)\n);</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>创建测试数据</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">#!/usr/bin/env ruby\n# frozen_string_literal: true\n\nrequire 'mysql2'\nrequire 'digest'\n\nclient = Mysql2::Client.new(\n  host: '172.17.0.2',\n  port: 3306,\n  username: 'test',\n  database: 'test'\n)\n\ninsert = &lt;&lt;-SQL\n  INSERT INTO\n    test(storage, hash, remark)\n  VALUES\n    #{100.times.map { '(?, ?, ?)' }.join(',')}\nSQL\n\ns0 = client.prepare(insert)\n\n(1..1_000_000).each_slice(100) do |is|\n  puts is.last\n  array = is.flat_map do |i|\n    [\"host-#{i % 10}\", Digest::SHA256.hexdigest(i.to_s), i.to_s]\n  end\n\n  s0.execute(*array)\nend\n\nclient.query('INSERT INTO test_1 (storage, hash, remark) SELECT storage, hash, remark FROM test')\nclient.query('INSERT INTO test_2 (storage, hash, remark) SELECT storage, hash, remark FROM test')\nclient.query('INSERT INTO test_3 (storage, hash, remark) SELECT storage, hash, remark FROM test')\n\nputs client.query('SELECT count(*) as count_test FROM test').first\nputs client.query('SELECT count(*) as count_test_1 FROM test_1').first\nputs client.query('SELECT count(*) as count_test_2 FROM test_2').first\nputs client.query('SELECT count(*) as count_test_3 FROM test_3').first</code></pre>\n</div>\n</div>\n</div>\n</div>","document":{"title":"Mysql 索引"},"pageAttributes":{"slug":"mysql-index","category":"database"},"revision":{"date":"2021-02-08","number":"1.0"}}},"pageContext":{"id":"8ee5669f-3a3e-50ba-93d8-cf35be9f8fb6","pageAttributes__slug":"mysql-index","__params":{"pageAttributes__slug":"mysql-index"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}