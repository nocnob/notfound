{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/jenkins-install/","result":{"data":{"asciidoc":{"id":"953f87b4-8262-5aad-9d25-d16e3b553fab","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>系统环境 Ubuntu 22.04 / CentOS Stream 9</p>\n</li>\n<li>\n<p>Jenkins 2.360</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_安装\"><a class=\"anchor\" href=\"#_安装\"></a>安装</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>APT (Ubuntu) 或者 YUM (CentOS) 方式安装。</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>添加 PGP 公钥：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Ubuntu\ncurl -fsSL https://pkg.jenkins.io/debian/jenkins.io.key \\\n    | sudo tee /usr/share/keyrings/jenkins-keyring.asc &gt; /dev/null\n\n# CentOS\nsudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>添加 APT 或 YUM 源：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Ubuntu\necho \"deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian binary/\" \\\n    | sudo tee /etc/apt/sources.list.d/jenkins.list &gt; /dev/null\n\n# CentOS\nsudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>安装依赖以及 jenkins：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Ubuntu\nsudo apt update\nsudo apt install fontconfig openjdk-11-jre\nsudo apt install jenkins\n\n# CentOS\nsudo dnf install fontconfig java-11-openjdk\nsudo dnf install jenkins</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_启动\"><a class=\"anchor\" href=\"#_启动\"></a>启动</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>安装完成后，Ubuntu 环境下 Jenkins 默认已经启动，而在 CentOS 中需要手动启动。</p>\n</div>\n<div class=\"paragraph\">\n<p>可以通过 systemd 对 Jeknins 进行管理：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">systemctl status jenkins.service        # 查看服务状态\n\nsudo systemctl start jenkins.service    # 启动服务\nsudo systemctl stop jenkins.service     # 停止服务\nsudo systemctl restart jenkins.service  # 重启服务\n\nsystemctl cat jenkins.service           # 查看 systemd 配置文件\n\njournalctl -u jenkins.service           # 查看 jenkins 日志</code></pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_修改端口号可选\"><a class=\"anchor\" href=\"#_修改端口号可选\"></a>修改端口号（可选）</h3>\n<div class=\"paragraph\">\n<p>编辑 jenkins.service：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">systemctl edit jenkins.service</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>修改 JENKINS_PORT：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\">-Environment=\"JENKINS_PORT=8080\"\n+Environment=\"JENKINS_PORT=8081\"</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>重启即可。</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_初始化\"><a class=\"anchor\" href=\"#_初始化\"></a>初始化</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>通过 <a href=\"http://localhost:8080\" class=\"bare\">http://localhost:8080</a> 访问服务：</p>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/jenkins-install-01.png\" alt=\"jenkins install\" width=\"500\">\n</div>\n<div class=\"title\">Figure 1. 解锁</div>\n</div>\n<div class=\"paragraph\">\n<p>复制初始化密码：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Ubuntu\nsudo cat /var/lib/jenkins/secrets/initialAdminPassword</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>安装默认插件：</p>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/jenkins-install-02.png\" alt=\"jenkins install\" width=\"500\">\n</div>\n<div class=\"title\">Figure 2. 插件</div>\n</div>\n</li>\n<li>\n<p>设置用户名和密码：</p>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/jenkins-install-03.png\" alt=\"jenkins install\" width=\"500\">\n</div>\n<div class=\"title\">Figure 3. 用户</div>\n</div>\n</li>\n<li>\n<p>设置 URL（可选）：</p>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/jenkins-install-04.png\" alt=\"jenkins install\" width=\"500\">\n</div>\n<div class=\"title\">Figure 4. URL</div>\n</div>\n</li>\n<li>\n<p>设置完成，开始使用：</p>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"/images/jenkins-install-05.png\" alt=\"jenkins install\" width=\"500\">\n</div>\n<div class=\"title\">Figure 5. 主页</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_nginx_安装与配置\"><a class=\"anchor\" href=\"#_nginx_安装与配置\"></a>Nginx 安装与配置</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>通过 Nginx 反向代理到 Jenkins。</p>\n</div>\n<div class=\"paragraph\">\n<p>安装 Nginx</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Ubuntu\nsudo apt install nginx\n\n# CentOS\nsudo dnf install nginx\nsudo systemctl start nginx.service</code></pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_配置\"><a class=\"anchor\" href=\"#_配置\"></a>配置</h3>\n<div class=\"paragraph\">\n<p>添加配置文件 <code>/etc/nginx/conf.d/jenkins.conf</code>：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">/etc/nginx/conf.d/jenkins.conf</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-nginx\" data-lang=\"nginx\">upstream jenkins {\n    keepalive 32;          # keepalive connections\n    server 127.0.0.1:8080; # jenkins ip and port <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n}\n\n# Required for Jenkins websocket agents\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    '' close;\n}\n\nserver {\n    listen          80;       # Listen on port 80 for IPv4 requests\n\n    server_name     jenkins.notfound.cn;  # replace 'jenkins.notfound.cn' with your server domain name <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n\n    # this is the jenkins web root directory\n    # (mentioned in the output of \"systemctl cat jenkins\") <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n    root            /var/cache/jenkins/war;\n\n    access_log      /var/log/nginx/jenkins.access.log;\n    error_log       /var/log/nginx/jenkins.error.log;\n\n    # pass through headers from Jenkins that Nginx considers invalid\n    ignore_invalid_headers off;\n\n    location ~ \"^/static/[0-9a-fA-F]{8}\\/(.*)$\" {\n        # rewrite all static files into requests to the root\n        # E.g /static/12345678/css/something.css will become /css/something.css\n        rewrite \"^/static/[0-9a-fA-F]{8}\\/(.*)\" /$1 last;\n    }\n\n    location /userContent {\n        # have nginx handle all the static requests to userContent folder\n        # note : This is the $JENKINS_HOME dir\n        root /var/lib/jenkins/;\n        if (!-f $request_filename){\n          # this file does not exist, might be a directory or a /**view** url\n          rewrite (.*) /$1 last;\n          break;\n        }\n        sendfile on;\n    }\n\n    location / {\n        sendfile off;\n        proxy_pass         http://jenkins; <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n        proxy_redirect     default;\n        proxy_http_version 1.1;\n\n        # Required for Jenkins websocket agents\n        proxy_set_header   Connection        $connection_upgrade;\n        proxy_set_header   Upgrade           $http_upgrade;\n\n        proxy_set_header   Host              $host;\n        proxy_set_header   X-Real-IP         $remote_addr;\n        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto $scheme;\n        proxy_max_temp_file_size 0;\n\n        #this is the maximum upload size\n        client_max_body_size       10m;\n        client_body_buffer_size    128k;\n\n        proxy_connect_timeout      90;\n        proxy_send_timeout         90;\n        proxy_read_timeout         90;\n        proxy_buffering            off;\n        proxy_request_buffering    off; # Required for HTTP CLI commands\n        proxy_set_header Connection \"\"; # Clear for keepalive\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>Jenkins IP 和端口</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>设置域名，根据需要修改</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>通过 jenkins.service 获取，其中 <code>%C</code> 为系统缓存根目录 <code>/var/cache</code>，所以完整路径为 <code>/var/cache/jenkins/war</code> ：\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">systemctl cat jenkins | grep \"JENKINS_WEBROOT\"\n# # $JENKINS_WEBROOT.\n# Environment=\"JENKINS_WEBROOT=%C/jenkins/war\"</code></pre>\n</div>\n</div></td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>设置反向代理</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>路径 <code>/var/cache/jenkins/war</code> 的用户和组都为 <code>jenkins</code>，Nginx 进程无权限访问，需要将 Nginx 用户 <code>wwww-data</code> (Ubuntu) 或 <code>nginx</code> (CentOS) 添加到 jenkins 组：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Ubuntu\nsudo usermod -aG jenkins www-data\n\n# CentOS\nsudo usermod -aG jenkins nginx</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>重启 Nginx 即可：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">sudo nginx -t                           # 测试 Nginx 配置\nsudo systemctl restart nginx.service    # 重启 Nginx</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://pkg.jenkins.io/debian/\" class=\"bare\">https://pkg.jenkins.io/debian/</a></p>\n</li>\n<li>\n<p><a href=\"https://pkg.jenkins.io/redhat/\" class=\"bare\">https://pkg.jenkins.io/redhat/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.jenkins.io/doc/book/installing/linux/#debianubuntu\" class=\"bare\">https://www.jenkins.io/doc/book/installing/linux/#debianubuntu</a></p>\n</li>\n<li>\n<p><a href=\"https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/\" class=\"bare\">https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-nginx/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-troubleshooting/\" class=\"bare\">https://www.jenkins.io/doc/book/system-administration/reverse-proxy-configuration-troubleshooting/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Specifiers\" class=\"bare\">https://www.freedesktop.org/software/systemd/man/systemd.unit.html#Specifiers</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Linux 环境下 jenkins 安装与配置"},"pageAttributes":{"slug":"jenkins-install","category":"jenkins"},"revision":{"date":"2022-07-24","number":"1.0"}}},"pageContext":{"id":"953f87b4-8262-5aad-9d25-d16e3b553fab","pageAttributes__slug":"jenkins-install","__params":{"pageAttributes__slug":"jenkins-install"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}