{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/graphql-java-getting-started/","result":{"data":{"asciidoc":{"id":"6230ddc5-fb4c-5353-a578-aebc0bc0801a","html":"<div class=\"sect1\">\n<h2 id=\"_graphql_java_以及_spring_boot_入门\"><a class=\"anchor\" href=\"#_graphql_java_以及_spring_boot_入门\"></a>GraphQL Java 以及 Spring Boot 入门</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>OpenJDK 11</p>\n</li>\n<li>\n<p>Gradle 6.8</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_spring_initializr\"><a class=\"anchor\" href=\"#_spring_initializr\"></a>Spring Initializr</h3>\n<div class=\"paragraph\">\n<p><a href=\"https://start.spring.io/\">Spring Initializr</a> 生成 Spring Boot 项目，只需要选择 Spring Web 一项</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_依赖\"><a class=\"anchor\" href=\"#_依赖\"></a>依赖</h3>\n<div class=\"paragraph\">\n<p>添加 <code>graphql-java</code> 以及 <code>graphql-java-spring-boot-starter-webmvc</code> ，所有依赖如下：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">implementation 'com.graphql-java:graphql-java:16.2'  // 新\nimplementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:2.0' // 新\nimplementation 'com.google.guava:guava:30.1.1-jre' // 新(可选)\n\nimplementation 'org.springframework.boot:spring-boot-starter-web'\ntestImplementation 'org.springframework.boot:spring-boot-starter-test'</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_schema\"><a class=\"anchor\" href=\"#_schema\"></a>Schema</h3>\n<div class=\"paragraph\">\n<p>新建文件 <code>src/main/resources/schema.graphqls</code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-graphql\" data-lang=\"graphql\">type Query{\n    hello: String\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_graphqlprovider\"><a class=\"anchor\" href=\"#_graphqlprovider\"></a>GraphQLProvider</h3>\n<div class=\"paragraph\">\n<p>需要提供 <code>GraphQL</code> bean 给 <code>graphql-java-spring-boot-starter-webmvc</code> 使用。</p>\n</div>\n<div class=\"paragraph\">\n<p>新建文件 <code>src/main/java/cn/notfound/GraphQLProvider.java</code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Component\npublic class GraphQLProvider {\n    private GraphQL graphQL;\n    private GraphQLDataFetchers dataFetchers;\n\n    @Autowired\n    public GraphQLProvider(GraphQLDataFetchers dataFetchers) {\n        this.dataFetchers = dataFetchers;\n    }\n\n    @PostConstruct\n    public void init() throws IOException {\n        URL url = Resources.getResource(\"schema.graphqls\");\n        String sdl = Resources.toString(url, Charsets.UTF_8);\n        GraphQLSchema graphQLSchema = buildSchema(sdl);\n        this.graphQL = GraphQL.newGraphQL(graphQLSchema).build();\n    }\n\n    private GraphQLSchema buildSchema(String sdl) {\n        TypeDefinitionRegistry typeRegistry = new SchemaParser().parse(sdl);\n        RuntimeWiring runtimeWiring = buildWiring();\n        SchemaGenerator schemaGenerator = new SchemaGenerator();\n        // 使用静态的 typeRegistry 和动态的 runtimeWiring 构建 GraphQLSchema\n        return schemaGenerator.makeExecutableSchema(typeRegistry, runtimeWiring);\n    }\n\n    // 定义了动态获取数据的方式\n    private RuntimeWiring buildWiring() {\n        return RuntimeWiring.newRuntimeWiring()\n            .type(TypeRuntimeWiring.newTypeWiring(\"Query\")\n                  .dataFetcher(\"hello\", dataFetchers.hello()))\n            .build();\n    }\n\n    @Bean\n    public GraphQL graphQL() {\n        return graphQL;\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>TypeDefinitionRegistry</code> GraphQL 类型静态定义</p>\n</li>\n<li>\n<p><code>RuntimeWiring</code> GraphQL 数据动态获取</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_graphqldatafetchers\"><a class=\"anchor\" href=\"#_graphqldatafetchers\"></a>GraphQLDataFetchers</h3>\n<div class=\"paragraph\">\n<p>新建 <code>src/main/java/cn/notfound/GraphQLDataFetchers.java</code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Component\npublic class GraphQLDataFetchers {\n    public DataFetcher hello() {\n        return environment -&gt; \"world\";\n    }\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_客户端\"><a class=\"anchor\" href=\"#_客户端\"></a>客户端</h3>\n<div class=\"paragraph\">\n<p>使用 <a href=\"https://github.com/graphql/graphql-playground\">graphql-playground</a> 作为客户端：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># manjaro linux\nyay -y graphql-playground-electron</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>打开客户端输入链接 <code><a href=\"http://localhost:8080/graphql\" class=\"bare\">http://localhost:8080/graphql</a></code> 查询</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-graphql\" data-lang=\"graphql\">{\n  hello\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>响应</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"data\": {\n    \"hello\": \"world\"\n  }\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://www.graphql-java.com/documentation/v16/getting-started/\" class=\"bare\">https://www.graphql-java.com/documentation/v16/getting-started/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.graphql-java.com/tutorials/getting-started-with-spring-boot/\" class=\"bare\">https://www.graphql-java.com/tutorials/getting-started-with-spring-boot/</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","document":{"title":"GraphQL Java 以及 Spring Boot 入门"},"pageAttributes":{"slug":"graphql-java-getting-started","category":"graphql"},"revision":{"date":"2021-03-24","number":"1.0"}}},"pageContext":{"id":"6230ddc5-fb4c-5353-a578-aebc0bc0801a","pageAttributes__slug":"graphql-java-getting-started","__params":{"pageAttributes__slug":"graphql-java-getting-started"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}