{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/kafka-cluster-start/","result":{"data":{"asciidoc":{"id":"f5a05f1d-4459-554c-9346-73e78c4385de","html":"<div class=\"sect1\">\n<h2 id=\"_准备\">准备</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Ubuntu 22.04</p>\n</li>\n<li>\n<p>Docker 20.10</p>\n</li>\n<li>\n<p>Kafka 3.3.1</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">docker pull openjdk:17\n# 为使用容器静态 IP，创建新的网络\ndocker network create --driver=bridge --gateway=172.18.1.254 --subnet=172.18.1.0/24 kafka\n\ntar -zxvf kafka_2.13-3.3.1.tgz</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>容器中测试，将 kafka 目录挂载到容器内。节点信息：</p>\n</div>\n<table class=\"tableblock frame-all grid-all stretch\">\n<colgroup>\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n<col style=\"width: 25%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">name</th>\n<th class=\"tableblock halign-left valign-top\">IP</th>\n<th class=\"tableblock halign-left valign-top\">hostname</th>\n<th class=\"tableblock halign-left valign-top\">volume</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">kafka01</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">172.18.1.1</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">kafka01</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">/opt/kafka01</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">kafka02</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">172.18.1.2</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">kafka02</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">/opt/kafka02</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">kafka03</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">172.18.1.3</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">kafka03</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">/opt/kafka03</p></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_配置节点\">配置节点</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>需要在 3 个节点上执行 3 次。以节点 kafka01 为例：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 复制解压后的文件\nsudo cp -r kafka_2.13-3.3.1 /opt/kafka01\n# 修改文件权限\nsudo chown -R $(id -u):$(id -g) /opt/kafka01</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>配置说明：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">config/kraft/server.properties</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-properties\" data-lang=\"properties\"># 服务的承担的角色\nprocess.roles=broker,controller\n# 节点 ID ,3 个节点 ID 分别设置为 1、2、 3\nnode.id=1\n# 负责仲裁的控制器，格式为 id1@host1:port1,id2@host2:port2,id3@host3:port3\ncontroller.quorum.voters=1@kafka01:9093,2@kafka02:9093,3@kafka03:9093\n# 监听点，3 个节点分别为 kafka01、kafka02、kafka03\nadvertised.listeners=PLAINTEXT://kafka01:9092\n# 日志目录\nlog.dirs=/opt/kafka/kraft-combined-logs\n# 分区数量\nnum.partitions=3\n# 内置偏移量主题 __consumer_offsets 复制系数\noffsets.topic.replication.factor=3\n# 事务日志复制系数\ntransaction.state.log.replication.factor=3\n# 事务日志最小同步副本数 (in-sync replicas)\ntransaction.state.log.min.isr=2</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>修改配置：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 备份\ncp config/kraft/server.properties config/kraft/server.properties.bak\n# 修改配置\nsed -e \"s/^node.id=.*/node.id=1/\" \\\n    -e \"s/^controller.quorum.voters=.*/controller.quorum.voters=1@kafka01:9093,2@kafka02:9093,3@kafka03:9093/\" \\\n    -e \"s/localhost/kafka01/\" \\\n    -e \"s/^log.dirs=.*/log.dirs=\\/opt\\/kafka\\/kraft-combined-logs/\" \\\n    -e \"s/^offsets.topic.replication.factor=.*/offsets.topic.replication.factor=3/\" \\\n    -e \"s/^transaction.state.log.replication.factor=.*/transaction.state.log.replication.factor=3/\" \\\n    -e \"s/^transaction.state.log.min.isr=.*/transaction.state.log.min.isr=2/\" \\\n    config/kraft/server.properties.bak | tee config/kraft/server.properties\n# 通过 diff 检查变更\ndiff -u config/kraft/server.properties.bak config/kraft/server.properties\n# 或者通过 vimdiff 检查变更\nvimdiff config/kraft/server.properties.bak config/kraft/server.properties</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>在容器内初始化 kafka 并启动服务：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 创建容器\ndocker run \\\n   --detach \\\n   --interactive \\\n   --tty \\\n   --network=kafka \\\n   --ip=172.18.1.1 \\\n   --name=kafka01 \\\n   --hostname=kafka01 \\\n   --volume /opt/kafka01:/opt/kafka \\\n    openjdk:17\n\n# 生成集群 ID，3 个节点使用相同的 ID\ncd /opt/kafka\nbin/kafka-storage.sh random-uuid\n# 输出：8Jqq_Wm6SGGwuTLGTcu5NA\n\n# 使用集群 ID 格式化日志目录，3 个节点使用相同 ID\nexport KAFKA_CLUSTER_ID=8Jqq_Wm6SGGwuTLGTcu5NA\nbin/kafka-storage.sh format -t $KAFKA_CLUSTER_ID -c config/kraft/server.properties\n\n# 三个节点都初始化完成后，依次启动 kafka 服务\nbin/kafka-server-start.sh -daemon config/kraft/server.properties</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_测试\">测试</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>进入任意容器内。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_负载均衡\">负载均衡</h3>\n<div class=\"paragraph\">\n<p>同一个主题的不同分区在不同节点，可以进行跨服务器的负载均衡。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">export broker=kafka01:9092\nexport topic=foo\n\n# 创建主题，3 个分区， 保存 1 份\nbin/kafka-topics.sh --bootstrap-server $broker --create --topic $topic --partitions 3 --replication-factor 1\n# 查看主题详情\nbin/kafka-topics.sh --bootstrap-server $broker --describe --topic $topic\n# 删除主题\nbin/kafka-topics.sh --bootstrap-server $broker --delete --topic $topic</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>主题详情：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">Topic: foo\tTopicId: SatE7dwySoWwTDs1JK70kQ\tPartitionCount: 3\tReplicationFactor: 1\tConfigs: segment.bytes=1073741824\n\tTopic: foo\tPartition: 0\tLeader: 3\tReplicas: 3\tIsr: 3\n\tTopic: foo\tPartition: 1\tLeader: 1\tReplicas: 1\tIsr: 1\n\tTopic: foo\tPartition: 2\tLeader: 2\tReplicas: 2\tIsr: 2</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">主题详情示意图</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nnode \"broker 3\" {\n  card \"Topic foo\" as t3 {\n    card \"Partition 0\"\n  }\n}\n\nnode \"broker 1\" {\n  card \"Topic foo\" as t1 {\n    card \"Partition 1\"\n  }\n}\n\nnode \"broker 2\" {\n  card \"Topic foo\" as t2 {\n    card \"Partition 2\"\n  }\n}\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>主题 foo 上的 3 个分区分布在 3 个节点上</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_复制\">复制</h3>\n<div class=\"paragraph\">\n<p>通过复制可避免因为单点故障造成数据丢失。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">export broker=kafka01:9092\nexport topic=bar\n\n# 创建主题，1 个分区， 保存 3 份\nbin/kafka-topics.sh --bootstrap-server $broker --create --topic $topic --partitions 1 --replication-factor 3\n# 查看主题详情\nbin/kafka-topics.sh --bootstrap-server $broker --describe --topic $topic</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>主题详情：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">Topic: bar\tTopicId: sgJStn8BSICA_z-mA5i5mQ\tPartitionCount: 1\tReplicationFactor: 3\tConfigs: segment.bytes=1073741824\n\tTopic: bar\tPartition: 0\tLeader: 2\tReplicas: 2,3,1\tIsr: 2,3,1</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">主题详情示意图</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nnode \"broker 1\" {\n  card \"Topic bar\" as t1 {\n    card \"Partition 0\" as p1\n  }\n}\n\nnode \"broker 2(Leader)\" {\n  card \"Topic bar\" as t2 {\n    card \"Partition 0\" as p2\n  }\n}\n\nnode \"broker 3\" {\n  card \"Topic bar\" as t3 {\n    card \"Partition 0\" as p3\n  }\n}\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>主题 bar 分区 0 在 3 个节点上各保存了 1 份，其中首领副本为 2</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_检查偏移主题\">检查偏移主题</h3>\n<div class=\"paragraph\">\n<p>进行生产、消费后，会创建内置偏移主题 <code>__consumer_offsets</code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">export broker=kafka01:9092\nexport topic=__consumer_offsets\n\nbin/kafka-topics.sh --bootstrap-server $broker --describe --topic $topic</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>确定主题开启了多个副本。</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_问题\">问题</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>创建容器时出现 <code>WARNING: IPv4 forwarding is disabled. Networking will not work.</code></p>\n<div class=\"paragraph\">\n<p>重启容器：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">sudo systemctl restart docker.service</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://giraffetree.me/2020/09/03/The-coordinator-is-not-available/\" class=\"bare\">https://giraffetree.me/2020/09/03/The-coordinator-is-not-available/</a></p>\n</li>\n<li>\n<p><a href=\"https://kafka.apache.org/documentation\" class=\"bare\">https://kafka.apache.org/documentation</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"kafka 集群搭建 (KRaft)"},"pageAttributes":{"slug":"kafka-cluster-start","category":"kafka"},"revision":{"date":"2023-01-02","number":"1.0"}}},"pageContext":{"id":"f5a05f1d-4459-554c-9346-73e78c4385de","pageAttributes__slug":"kafka-cluster-start","__params":{"pageAttributes__slug":"kafka-cluster-start"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}