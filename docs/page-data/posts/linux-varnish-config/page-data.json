{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/linux-varnish-config/","result":{"data":{"asciidoc":{"id":"df0c8470-cd8a-5ff8-a601-506b5e42c91c","html":"<div class=\"sect1\">\n<h2 id=\"_参数\"><a class=\"anchor\" href=\"#_参数\"></a>参数</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>systemd 文件默认参数如下：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">ExecStart=/usr/sbin/varnishd \\\n      -a :6081 \\\n      -a localhost:8443,PROXY \\\n      -p feature=+http2 \\\n      -f /etc/varnish/default.vcl \\\n      -s malloc,256m</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>-a</code> 监听地址</p>\n</li>\n<li>\n<p><code>-f</code> VCL 文件路径</p>\n</li>\n<li>\n<p><code>-s</code> 后端存储</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>malloc</code> 通过内存存储对象，内存不足是会使用交换分区。限制大小为 256m。</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>-t TTL</code> 缓存对象默认生存时间，默认为 120s</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_存储后端\"><a class=\"anchor\" href=\"#_存储后端\"></a>存储后端</h3>\n<div class=\"paragraph\">\n<p>可配置为内存或者文件存储。https://varnish-cache.org/docs/6.0/users-guide/storage-backends.html[官方文档]</p>\n</div>\n<div class=\"paragraph\">\n<p><code>malloc[,size]</code> 通过内存存储对象，内存不足时会使用交换分区，如\n<code>malloc,256m</code>。</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>size</code> 内存限制大小</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><code>file,path[,size[,granularity[,advice]]]</code> 将对象存储在由磁盘，通过 mmap 访问。</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>path</code> 文件路径。</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>指定 <code>path</code> 未指定 <code>size</code> 时，将会使用已存在的文件大小</p>\n</li>\n<li>\n<p>指定 <code>size</code> 且文件已经存在，则文件将会被截断或者扩充。</p>\n</li>\n<li>\n<p>指定 <code>path</code> 和 <code>size</code> 时，文件会创建</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>granularity</code> 分配粒度，字节为单位。默认为 VM 页面大小</p>\n</li>\n<li>\n<p><code>advice</code> 如何使用映射区域，以便内和可以选择适当的预读和缓存技术。可能的值为 <code>normal</code> <code>random</code> 以及 <code>sequential</code>。默认为 <code>random</code>。Linux 系统上，大对象以及机械硬盘选择 <code>sequential</code> 可能会受益。</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_缓存大小\"><a class=\"anchor\" href=\"#_缓存大小\"></a>缓存大小</h3>\n<div class=\"paragraph\">\n<p>通过 <code>sudo varnishstat</code> 观察 <code>n_lru_nuked</code> 计数器，观察是否有大量对象被淘汰。https://varnish-cache.org/docs/6.0/users-guide/sizing-your-cache.html[官方文档]</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_命令\"><a class=\"anchor\" href=\"#_命令\"></a>命令</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_varnishstat\"><a class=\"anchor\" href=\"#_varnishstat\"></a>varnishstat</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">sudo varnishstat</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>MAIN.cache_hit</code> 缓存命中计数</p>\n</li>\n<li>\n<p><code>MAIN.cache_miss</code> 缓存未命中数</p>\n</li>\n<li>\n<p><code>MAIN.threads</code> 线程池中线程总数</p>\n</li>\n<li>\n<p><code>MAIN.n_object</code> 缓存中的 HTTP 对象（标头 + 正文，如果存在）的近似数量。</p>\n</li>\n<li>\n<p><code>MAIN.n_lru_nuked</code> 有多少对象被强制从存储中驱逐，以便为新对象腾出空间。</p>\n</li>\n<li>\n<p><code>SMA.s0.g_bytes</code> 从存储中分配的字节数</p>\n</li>\n<li>\n<p><code>SMA.s0.g_space</code> 存储中剩余的字节数</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_varnishtop\"><a class=\"anchor\" href=\"#_varnishtop\"></a>varnishtop</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">sudo varnishtop\n# 查看 URL 列表\nsudo varnishtop -i ReqURL\n# 查看 User-Agent\nsudo varnishtop -C -I ReqHeader:User-Agent</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_头部\"><a class=\"anchor\" href=\"#_头部\"></a>头部</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Varnish 会添加 HTTP 方便排查问题：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-http\" data-lang=\"http\">HTTP/1.1 200 OK\nContent-Type: text/html;charset=utf-8\nContent-Length: 7\nX-XSS-Protection: 1; mode=block\nX-Content-Type-Options: nosniff\nX-Frame-Options: SAMEORIGIN\nServer: thin 1.5.1 codename Straight Razor\nDate: Thu, 17 Feb 2022 08:55:48 GMT\nX-Varnish: 98417 98405\nAge: 35\nVia: 1.1 varnish (Varnish/6.0)\nAccept-Ranges: bytes\nConnection: keep-alive</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>X-Varnish</code> 当前请求 ID 和填充缓存的请求 ID</p>\n</li>\n<li>\n<p><code>Age</code> 对象在 Varnish 中保存的时间，单位秒</p>\n</li>\n<li>\n<p><code>Via</code> 缓存服务名称和版本</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_添加自定义_http_头部\"><a class=\"anchor\" href=\"#_添加自定义_http_头部\"></a>添加自定义 HTTP 头部</h3>\n<div class=\"paragraph\">\n<p>编辑 <code>/etc/varnish/default.vcl</code>：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">sub vcl_recv {\n    # 接收到客户端请求\n    unset req.http.X-Cache;\n}\n\nsub vcl_deliver {\n    set resp.http.X-Cache = req.http.X-Cache;\n    set resp.http.Via = \"1.1 varnish\";\n    unset resp.http.X-Varnish;\n}\n\nsub vcl_hit {\n    # 命中缓存\n    set req.http.X-Cache = \"HIT\";\n}\n\nsub vcl_miss {\n    # 未命中缓存\n    set req.http.X-Cache = \"MISS\";\n}\n\nsub vcl_pass {\n    set req.http.X-Cache = \"PASS\";\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>添加 HTTP 头部 <code>X-Cache: HIT</code></p>\n</li>\n<li>\n<p>隐藏版本号</p>\n</li>\n<li>\n<p>移除头部 <code>X-Varnish</code></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://varnish-cache.org/docs/6.0/reference/states.html\">状态说明</a></p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_多后端服务器\"><a class=\"anchor\" href=\"#_多后端服务器\"></a>多后端服务器</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>directors 可将多个后端作为一组后端。</p>\n</div>\n<div class=\"paragraph\">\n<p>编辑 <code>/etc/varnish/default.vcl</code>：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">import directors;\n\nbackend s1 {\n    .host = \"127.0.0.1\";\n    .port = \"8080\";\n    .probe = {\n         .url = \"/\";\n         .timeout = 1s;\n         .interval = 5s;\n         .window = 5;\n         .threshold = 3;\n     }\n}\n\nbackend s2 {\n    .host = \"127.0.0.1\";\n    .port = \"8081\";\n    .probe = {\n         .url = \"/\";\n         .timeout = 1s;\n         .interval = 5s;\n         .window = 5;\n         .threshold = 3;\n     }\n}\n\nsub vcl_init {\n    new bar = directors.round_robin();\n    bar.add_backend(s1);\n    bar.add_backend(s2);\n}\n\nsub vcl_recv {\n    set req.backend_hint = bar.backend();\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>round_robin</code> 通过轮询方式实现负载均衡</p>\n</li>\n<li>\n<p><code>probe</code> 健康检查</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>url</code> GET 请求 <code>/</code></p>\n</li>\n<li>\n<p><code>timeout</code> 请求超时时间 1s</p>\n</li>\n<li>\n<p><code>interval</code> 检查后端的时间间隔 5s</p>\n</li>\n<li>\n<p><code>window</code> 5 次</p>\n</li>\n<li>\n<p><code>threshold</code> 临界值 3，每 5 次投票 3 次成功则认为时健康的</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>连接后端默认会使用连接池。</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://varnish-cache.org/docs/6.0/users-guide/vcl-backends.html\">官方文档</a></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://varnish-cache.org/docs/6.0/reference/varnishd.html\" class=\"bare\">https://varnish-cache.org/docs/6.0/reference/varnishd.html</a></p>\n</li>\n<li>\n<p><a href=\"https://varnish-cache.org/docs/6.0/reference/states.html\" class=\"bare\">https://varnish-cache.org/docs/6.0/reference/states.html</a></p>\n</li>\n<li>\n<p><a href=\"https://varnish-cache.org/docs/6.0/users-guide/increasing-your-hitrate.html\" class=\"bare\">https://varnish-cache.org/docs/6.0/users-guide/increasing-your-hitrate.html</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.varnish-software.com/tutorials/hit-miss-logging\" class=\"bare\">https://docs.varnish-software.com/tutorials/hit-miss-logging</a></p>\n</li>\n<li>\n<p><a href=\"https://www.varnish-software.com/developers/tutorials/multiple-backends\" class=\"bare\">https://www.varnish-software.com/developers/tutorials/multiple-backends</a></p>\n</li>\n<li>\n<p><a href=\"https://varnish-cache.org/docs/6.0/users-guide/vcl-backends.html\" class=\"bare\">https://varnish-cache.org/docs/6.0/users-guide/vcl-backends.html</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Varnish 配置"},"pageAttributes":{"slug":"linux-varnish-config","category":"varnish"},"revision":{"date":"2022-02-17","number":"1.0"}}},"pageContext":{"id":"df0c8470-cd8a-5ff8-a601-506b5e42c91c","pageAttributes__slug":"linux-varnish-config","__params":{"pageAttributes__slug":"linux-varnish-config"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}