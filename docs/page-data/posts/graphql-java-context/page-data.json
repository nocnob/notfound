{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/graphql-java-context/","result":{"data":{"asciidoc":{"id":"4305b3bf-0f2c-5675-ba45-265d8b2092e2","html":"<div class=\"sect1\">\n<h2 id=\"_graphql_java_以及_spring_boot_context\"><a class=\"anchor\" href=\"#_graphql_java_以及_spring_boot_context\"></a>GraphQL Java 以及 Spring Boot: Context</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>OpenJDK 11</p>\n</li>\n<li>\n<p>Gradle 6.8</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><code>DataFetchingEnvironment</code> 中存在一个 <code>Context</code> ，在整个查询生命周期中不变。</p>\n</div>\n<div class=\"paragraph\">\n<p>修改了示例 [<a href=\"https://notfound.cn/posts/graphql-java-getting-started/\" class=\"bare\">https://notfound.cn/posts/graphql-java-getting-started/</a>] 在 context 中传递 user 信息。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_依赖\"><a class=\"anchor\" href=\"#_依赖\"></a>依赖</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">implementation 'com.graphql-java:graphql-java:16.2' // 新\nimplementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:2.0' // 新\nimplementation 'com.google.guava:guava:30.1.1-jre' // 新(可选)\n\nimplementation 'org.springframework.boot:spring-boot-starter-security'\nimplementation 'org.springframework.boot:spring-boot-starter-web'\ntestImplementation 'org.springframework.boot:spring-boot-starter-test'\ntestImplementation 'org.springframework.security:spring-security-test'</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_spring_security_配置\"><a class=\"anchor\" href=\"#_spring_security_配置\"></a>Spring Security 配置</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.csrf().disable()\n                .authorizeRequests().anyRequest().permitAll()\n                .and()\n                .httpBasic();\n    }\n\n    @Bean\n    @Override\n    public UserDetailsService userDetailsService() {\n        UserDetails user = User.withDefaultPasswordEncoder()\n                .username(\"admin\")\n                .password(\"password\")\n                .roles(\"USER\")\n                .build();\n\n        return new InMemoryUserDetailsManager(user);\n    }\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_创建_bean_executioninputcustomizer\"><a class=\"anchor\" href=\"#_创建_bean_executioninputcustomizer\"></a>创建 bean ExecutionInputCustomizer</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Component\npublic class GraphQLProvider {\n    private GraphQL graphQL;\n    private ExecutionInputCustomizer executionInputCustomizer;\n    private GraphQLDataFetchers dataFetchers;\n\n    @Autowired\n    public GraphQLProvider(GraphQLDataFetchers dataFetchers) {\n        this.dataFetchers = dataFetchers;\n    }\n\n    @PostConstruct\n    public void init() throws IOException {\n        // 省略部分代码\n        this.executionInputCustomizer = new ExampleExecutionInputCustomizer();\n    }\n\n    // 省略部分代码\n\n    // 提供 bean 给 graphql-java-spring-webmvc 使用\n    @Bean\n    public ExecutionInputCustomizer executionInputCustomizer() {\n        return executionInputCustomizer;\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>提供 bean <code>ExecutionInputCustomizer</code> 给 graphql-java-spring-webmvc 使用</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_executioninputcustomizer\"><a class=\"anchor\" href=\"#_executioninputcustomizer\"></a>ExecutionInputCustomizer</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Component\npublic class ExampleExecutionInputCustomizer implements ExecutionInputCustomizer {\n    @Override\n    public CompletableFuture&lt;ExecutionInput&gt; customizeExecutionInput(ExecutionInput executionInput, WebRequest webRequest) {\n        Principal principal = webRequest.getUserPrincipal();\n        if (principal != null) {\n            GraphQLContext context = (GraphQLContext) executionInput.getContext();\n            context.put(\"principal\", principal);\n        }\n        return CompletableFuture.completedFuture(executionInput);\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>将当前用户信息保存到 Context，整个查询都可通过 Context 方法到当前用户信息</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_datafetcher\"><a class=\"anchor\" href=\"#_datafetcher\"></a>DataFetcher</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Component\npublic class GraphQLDataFetchers {\n    DataFetcher&lt;String&gt; hello = environment -&gt; {\n        GraphQLContext context = environment.getContext();\n        Principal principal = context.get(\"principal\");\n        System.out.println(principal);\n        if (principal != null) {\n            return principal.getName();\n        } else {\n            return \"world\";\n        }\n    };\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>从 context 获取当前用户信息</p>\n</li>\n<li>\n<p>之前 <code>hello</code> 方法改成了变量</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_访问\"><a class=\"anchor\" href=\"#_访问\"></a>访问</h3>\n<div class=\"paragraph\">\n<p>使用 <a href=\"https://github.com/graphql/graphql-playground\">graphql-playground</a> 作为客户端，设置 HTTP HEADS 即可认证：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"Authorization\": \"Basic YWRtaW46cGFzc3dvcmQ=\"\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://spring.io/guides/gs/securing-web/\" class=\"bare\">https://spring.io/guides/gs/securing-web/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.graphql-java.com/documentation/v16/data-fetching/\" class=\"bare\">https://www.graphql-java.com/documentation/v16/data-fetching/</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","document":{"title":"GraphQL Java 以及 Spring Boot: Context"},"pageAttributes":{"slug":"graphql-java-context","category":"graphql"},"revision":{"date":"2021-03-27","number":"1.0"}}},"pageContext":{"id":"4305b3bf-0f2c-5675-ba45-265d8b2092e2","pageAttributes__slug":"graphql-java-context","__params":{"pageAttributes__slug":"graphql-java-context"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}