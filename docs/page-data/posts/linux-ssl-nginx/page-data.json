{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/linux-ssl-nginx/","result":{"data":{"asciidoc":{"id":"e6d83bc4-842b-534b-a425-3478d9ff7185","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>系统环境：Ubuntu 22.04</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_自签名证书\"><a class=\"anchor\" href=\"#_自签名证书\"></a>自签名证书</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>生成服务器私钥：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl genrsa -out example.com.key 2048</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>生成证书签名请求：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl req -new -key example.com.key -out example.com.csr</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>Common Name (eg, your name or your server&#8217;s hostname)</code> 填写域名 <code>example.com</code></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>使用证书签名请求以及私钥签发证书：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl x509 -req -days 365 -in example.com.csr -signkey example.com.key -out example.com.crt</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_生成自签名_ca_证书\"><a class=\"anchor\" href=\"#_生成自签名_ca_证书\"></a>生成自签名 CA 证书</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_ca\"><a class=\"anchor\" href=\"#_ca\"></a>CA</h3>\n<div class=\"paragraph\">\n<p>测试域名为 <code>example.com</code></p>\n</div>\n<div class=\"paragraph\">\n<p>创建 CA 目录：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">mkdir -p ssl/demoCA/{certs,newcerts,crl,private}\ncd ssl\ntouch demoCA/index.txt\necho \"01\" &gt; demoCA/serial\ncp /etc/ssl/openssl.cnf .</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>CA 目录从 <code>/etc/pki/CA</code> 改为 <code>demoCA</code></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>生成 CA 私钥和证书：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl req -new -x509 -days 365 -newkey rsa:2048 \\\n  -keyout demoCA/private/cakey.pem \\\n  -out demoCA/cacert.pem \\\n  -config openssl.cnf</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>证书有效期 356 天</p>\n</li>\n<li>\n<p>输出目录与配置文件一致</p>\n</li>\n<li>\n<p>注意输入域名 <code>Common Name (eg, your name or your server&#8217;s hostname) []:example.com</code></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>查看 key 和证书：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 查看 rsa 私钥\nopenssl rsa -noout -text -in demoCA/private/cakey.pem\n# 查看证书\nopenssl x509 -noout -text -in demoCA/cacert.pem\n# 移除私钥密码\nopenssl rsa -in demoCA/cacert.pem -out demoCA/cacert.key</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>目录结构：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">ssl\n├── demoCA\n│   ├── cacert.pem\n│   ├── certs\n│   ├── crl\n│   ├── index.txt\n│   ├── newcerts\n│   ├── private\n│   │   └── cakey.pem\n│   └── serial\n└── openssl.cnf</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_客户端\"><a class=\"anchor\" href=\"#_客户端\"></a>客户端</h3>\n<div class=\"paragraph\">\n<p>生成客户端私钥：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl genrsa -out example.com.key 2048</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>生成证书签名请求：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl req -new -key example.com.key -out example.com.csr -config openssl.cnf</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>注意输入域名 <code>Common Name (eg, your name or your server&#8217;s hostname) []: example.com</code></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>使用 CA 根证书签发客户端证书：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl ca -in example_com.csr -out example_com.crt -config openssl.cnf</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_多级证书\"><a class=\"anchor\" href=\"#_多级证书\"></a>多级证书</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>创建目录：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">mkdir -p ssl/{ca1.demo.com,ca2.demo.com}/{certs,newcerts,crl,private}\ncd ssl</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>目录结构：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">ssl\n├── ca1.demo.com\n│   ├── certs\n│   ├── crl\n│   ├── newcerts\n│   └── private\n└── ca2.demo.com\n    ├── certs\n    ├── crl\n    ├── newcerts\n    └── private</code></pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_根_ca\"><a class=\"anchor\" href=\"#_根_ca\"></a>根 CA</h3>\n<div class=\"paragraph\">\n<p>配置：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">touch ca1.demo.com/index.txt\necho \"01\" &gt; ca1.demo.com/serial\n\ncp /etc/ssl/openssl.cnf .</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>修改 <code>openssl.cnf</code>，修改所有的 <code>demoCA</code>, 和 <code>CA_default</code> 域的 <code>x509_extensions</code>：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\"> [ CA_default ]\n ...\n-dir            = ./demoCA              # Where everything is kept\n+dir            = ./ca1.demo.com        # Where everything is kept\n ...\n-x509_extensions        = usr_cert      # The extensions to add to the cert\n+x509_extensions        = v3_ca         # The extensions to add to the cert\n ...\n-dir            = ./demoCA              # TSA root directory\n+dir            = ./ca1.demo.com        # TSA root directory</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>修改 <code>req_distinguished_name</code> 段如 <code>countryName_default</code> 等默认值避免反复填写相关信息：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\"> [ req_distinguished_name ]\n countryName                    = Country Name (2 letter code)\n-countryName_default            = AU\n+countryName_default            = CN\n\n stateOrProvinceName            = State or Province Name (full name)\n-stateOrProvinceName_default    = Some-State\n+stateOrProvinceName_default    = GuangDong\n\n localityName                   = Locality Name (eg, city)\n+localityName_default           = ShenZhen\n\n 0.organizationName             = Organization Name (eg, company)\n-0.organizationName_default     = Internet Widgits Pty Ltd\n+0.organizationName_default     = demo</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>生成私钥和证书：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl req -config openssl.cnf \\\n  -new -x509 -newkey rsa:2048 \\\n  -keyout ca1.demo.com/private/cakey.pem \\\n  -out ca1.demo.com/cacert.pem</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_二级_ca\"><a class=\"anchor\" href=\"#_二级_ca\"></a>二级 CA</h3>\n<div class=\"paragraph\">\n<p>配置：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">touch ca2.demo.com/index.txt\necho \"01\" &gt; ca2.demo.com/serial</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>生成私钥和证书请求：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl genrsa -out ca2.demo.com/private/cakey.pem 2048\nopenssl req -config openssl.cnf \\\n  -new -key ca2.demo.com/private/cakey.pem \\\n  -out ca2.demo.com/ca.csr</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>通过根 CA 对二级 CA 证书请求进行签名：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl ca -config openssl.cnf -in ca2.demo.com/ca.csr -out ca2.demo.com/cacert.pem</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>修改 <code>openssl.cnf</code>，替换全部 <code>ca1.demo.com</code> 和 <code>CA_default</code> 段的 <code>x509_extensions</code>，后续操作使用 <code>ca2.demo.com</code>：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\"> [ CA_default ]\n ...\n-dir            = ./ca1.demo.com                # Where everything is kept\n+dir            = ./ca2.demo.com                # Where everything is kept\n ...\n-x509_extensions        = v3_ca                 # The extensions to add to the cert\n+x509_extensions        = usr_cert              # The extensions to add to the cert\n ...\n-dir            = ./ca1.demo.com                # TSA root directory\n+dir            = ./ca2.demo.com                # TSA root directory</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_客户端_2\"><a class=\"anchor\" href=\"#_客户端_2\"></a>客户端</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">export domain=demo.com\nmkdir $domain\nopenssl genrsa -out $domain/$domain.key 2048\nopenssl req -config openssl.cnf -new -key $domain/$domain.key -out $domain/$domain.csr</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>客户端签名：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl ca -config openssl.cnf \\\n  -in $domain/$domain.csr \\\n  -out $domain/$domain.crt</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_多域名证书\"><a class=\"anchor\" href=\"#_多域名证书\"></a>多域名证书</h3>\n<div class=\"paragraph\">\n<p>修改 <code>openssl.conf</code>：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\"> [ usr_cert ]\n ...\n-# subjectAltName=email:copy\n+subjectAltName=DNS:demo.io,DNS:*.demo.io</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>证书可对 demo.io 和 demo.io 二级域名生效</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>之后执行证书生成操作。</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_问题\"><a class=\"anchor\" href=\"#_问题\"></a>问题</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>报错 curl: (60) SSL certificate problem: unable to get local issuer certificate</p>\n<div class=\"paragraph\">\n<p>自签名证书无法通过网络获取证书链，因此在配置 Nginx 时，需要将证书链上除根证书以外的所有证书放到同一个证书文件。</p>\n</div>\n<div class=\"paragraph\">\n<p>这里需要将 <code>demo.com/demo.com.crt</code> 和 <code>ca2.demo.com/cacert.pem</code> 放到一起：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 合并两个文件内容\ncat demo.com/demo.com.crt ca2.demo.com/cacert.pem &gt; demo.com.crt</code></pre>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_配置_nginx\"><a class=\"anchor\" href=\"#_配置_nginx\"></a>配置 Nginx</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-nginx\" data-lang=\"nginx\">server {\n  listen       443 ssl http2;\n  listen       [::]:443 ssl http2;\n  server_name  demo.com;\n\n  ssl_certificate demo.com.crt;\n  ssl_certificate_key demo.com.key;\n  # ...\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>配置多级证书时，需要将中间证书也添加到证书文件，在这里需要将 <code>demo.com/demo.com.crt</code>、<code>ca2.demo.com/cacert.pem</code> 两个文件中的 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code> 部分放到同一个文件，根证书可选。</p>\n</div>\n<div class=\"paragraph\">\n<p>测试证书有效性：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">openssl s_client -connect client.example.com:443</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_添加_ca_到_linux_系统\"><a class=\"anchor\" href=\"#_添加_ca_到_linux_系统\"></a>添加 CA 到 Linux 系统</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>可直接通过 HTTPS 请求获取证书：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 执行命令后，输入 quit\nopenssl s_client -showcerts -servername example.com -connect example.com:443 &gt; example_com_0.pem\n\nopenssl x509 -inform PEM -in example_com_0.pem -text -out example_com.pem</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>添加 CA 根证书：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># fedora 35\nsudo cp demoCA/cacert.pem /usr/share/pki/ca-trust-source/anchors/example.com.pem\nsudo update-ca-trust\n\n# Ubuntu 22.04\nsudo cp demoCA/cacert.pem /usr/local/share/ca-certificates/example.com.crt\nsudo update-ca-certificates</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>使用 curl 命令时，CA 证书会生效：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">curl -v -I https://example.com</code></pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_linux_浏览器\"><a class=\"anchor\" href=\"#_linux_浏览器\"></a>Linux 浏览器</h3>\n<div class=\"paragraph\">\n<p>在 Linux上，Chromium (Chrome Edge) 使用 NSS 共享数据库，需要安装：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">sudo apt install libnss3-tools</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 列出所有证书\ncertutil -d sql:$HOME/.pki/nssdb -L\n# 列出证书的详细信息\ncertutil -d sql:$HOME/.pki/nssdb -L -n &lt;certificate nickname&gt;\n# 添加 CA 根证书\ncertutil -d sql:$HOME/.pki/nssdb -A -t \"C,,\" -n \"ca1.demo.com\" -i ca1.demo.com/cacert.pem\n# 添加 CA 中间证书\ncertutil -d sql:$HOME/.pki/nssdb -A -t \",,\"  -n \"ca2.demo.com\" -i ca2.demo.com/cacert.pem\n# 删除 CA 证书\ncertutil -d sql:$HOME/.pki/nssdb -D -n \"ca2.demo.com\"</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://docs.azure.cn/zh-cn/articles/azure-operations-guide/application-gateway/aog-application-gateway-howto-create-self-signed-cert-via-openssl\" class=\"bare\">https://docs.azure.cn/zh-cn/articles/azure-operations-guide/application-gateway/aog-application-gateway-howto-create-self-signed-cert-via-openssl</a></p>\n</li>\n<li>\n<p><a href=\"https://nginx.org/en/docs/http/configuring_https_servers.html\" class=\"bare\">https://nginx.org/en/docs/http/configuring_https_servers.html</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.fedoraproject.org/en-US/quick-docs/using-shared-system-certificates/\" class=\"bare\">https://docs.fedoraproject.org/en-US/quick-docs/using-shared-system-certificates/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.postgresql.org/docs/current/ssl-tcp.html\" class=\"bare\">https://www.postgresql.org/docs/current/ssl-tcp.html</a></p>\n</li>\n<li>\n<p><a href=\"https://www.linode.com/docs/guides/using-openssls-subjectaltname-with-multiple-site-domains/\" class=\"bare\">https://www.linode.com/docs/guides/using-openssls-subjectaltname-with-multiple-site-domains/</a></p>\n</li>\n<li>\n<p><a href=\"https://curl.se/docs/sslcerts.html\" class=\"bare\">https://curl.se/docs/sslcerts.html</a></p>\n</li>\n<li>\n<p><a href=\"https://chromium.googlesource.com/chromium/src/+/master/docs/linux/cert_management.md\" class=\"bare\">https://chromium.googlesource.com/chromium/src/+/master/docs/linux/cert_management.md</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"使用 OpenSSL 生成 Nginx 证书"},"pageAttributes":{"slug":"linux-ssl-nginx","category":"linux"},"revision":{"date":"2021-11-21","number":"2.0"}}},"pageContext":{"id":"e6d83bc4-842b-534b-a425-3478d9ff7185","pageAttributes__slug":"linux-ssl-nginx","__params":{"pageAttributes__slug":"linux-ssl-nginx"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}