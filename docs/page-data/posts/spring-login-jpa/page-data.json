{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/spring-login-jpa/","result":{"data":{"asciidoc":{"id":"e01d08f0-f339-59d3-86b0-518134c42411","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Spring Boot 2.5.5</p>\n</li>\n<li>\n<p>PostgreSQL</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>通过实现 <code>UserDetailsService</code> 接口从 PostgreSQL 中查询用户。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_依赖\"><a class=\"anchor\" href=\"#_依赖\"></a>依赖</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-gradle\" data-lang=\"gradle\">implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\nimplementation 'org.springframework.boot:spring-boot-starter-security'\nimplementation 'org.springframework.boot:spring-boot-starter-web'\nruntimeOnly 'org.postgresql:postgresql'</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_配置\"><a class=\"anchor\" href=\"#_配置\"></a>配置</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>修改 <code>application.properties</code>，设置用户名和密码</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-properties\" data-lang=\"properties\">spring.datasource.username=example\nspring.datasource.password=YOUR_PASSWORD\nspring.datasource.url=jdbc:postgresql://127.0.0.1/example_db\nspring.jpa.generate-ddl=true</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>需要在 PostgreSQL 中创建数据库 <code>example_db</code></p>\n</li>\n<li>\n<p><code>generate-ddl</code> 自动生成表结构</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_基本过程\"><a class=\"anchor\" href=\"#_基本过程\"></a>基本过程</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_1_创建_user_java\"><a class=\"anchor\" href=\"#_1_创建_user_java\"></a>1. 创建 <code>User.java</code>:</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Entity\n@Table(name = \"users\")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Integer id;\n    @Column(unique = true)\n    private String username;\n    private String password;\n    // 省略 getter 和 setter\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>application.properties</code> 已配置自动生成表结构</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_2_创建_userrepository_java\"><a class=\"anchor\" href=\"#_2_创建_userrepository_java\"></a>2. 创建 <code>UserRepository.java</code></h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">public interface UserRepository extends CrudRepository&lt;User, Integer&gt; {\n    Optional&lt;User&gt; findByUsername(String username);\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>JPA 自动生成查询: 通过用户名查询 User</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_3_创建_customuserdetailsservice_java_实现_userdetailsservice_接口\"><a class=\"anchor\" href=\"#_3_创建_customuserdetailsservice_java_实现_userdetailsservice_接口\"></a>3. 创建 <code>CustomUserDetailsService.java</code> 实现 <code>UserDetailsService</code> 接口:</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Component\npublic class CustomUserDetailsService implements UserDetailsService {\n    @Autowired\n    private UserRepository userRepository;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        User user = userRepository.findByUsername(username)\n                .orElseThrow(() -&gt; new UsernameNotFoundException(username));\n        return new org.springframework.security.core.userdetails.User(user.getUsername(), user.getPassword(), AuthorityUtils.NO_AUTHORITIES);\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Spring 通过 <code>UserDetailsService#loadUserByUsername</code> 查询登陆用户，之后会对 username 和 password 进行校验</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_4_修改_demoapplication_java\"><a class=\"anchor\" href=\"#_4_修改_demoapplication_java\"></a>4. 修改 <code>DemoApplication.java</code></h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@SpringBootApplication\npublic class DemoApplication implements ApplicationRunner {\n    public static void main(String[] args) {\n        SpringApplication.run(DemoApplication.class, args);\n    }\n\n    @Autowired\n    private UserRepository userRepository;\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n\n    @Override\n    public void run(ApplicationArguments args) {\n        if (userRepository.count() &gt; 0) return;\n\n        User user = new User();\n        user.setUsername(\"tester\");\n        user.setPassword(passwordEncoder.encode(\"password\"));\n        userRepository.save(user);\n    }\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return PasswordEncoderFactories.createDelegatingPasswordEncoder();\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>ApplicationRunner#run</code> 只是为了在程序启动时创建一个用户</p>\n</li>\n<li>\n<p><code>PasswordEncoder</code> 配置密码加密方式</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_5_资源\"><a class=\"anchor\" href=\"#_5_资源\"></a>5. 资源</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@RestController\npublic class Home {\n    @GetMapping(\"/\")\n    public ResponseEntity&lt;String&gt; index(Authentication authentication) {\n        return ResponseEntity.ok(\"Hello, \" + authentication.getName());\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>获取当前用户的用户名</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","document":{"title":"Spring 默认表单以及 JPA 登陆"},"pageAttributes":{"slug":"spring-login-jpa","category":"spring"},"revision":{"date":"2021-10-17","number":"1.0"}}},"pageContext":{"id":"e01d08f0-f339-59d3-86b0-518134c42411","pageAttributes__slug":"spring-login-jpa","__params":{"pageAttributes__slug":"spring-login-jpa"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}