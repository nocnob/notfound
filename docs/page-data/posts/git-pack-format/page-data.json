{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/git-pack-format/","result":{"data":{"asciidoc":{"id":"dff78009-79a6-56e3-b4eb-e58a2f2adaa3","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>git <code>.pack</code> 文件分为三大块：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>头部 12-byte</p>\n</li>\n<li>\n<p>1~n 个对象条目</p>\n</li>\n<li>\n<p>对象条目</p>\n</li>\n<li>\n<p>n-byte 类型和长度</p>\n</li>\n<li>\n<p>数据</p>\n</li>\n<li>\n<p>校验和 20-byte</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"/files/git-pack-format.git.tar.gz\">测试数据</a></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_头部_12_byte\"><a class=\"anchor\" href=\"#_头部_12_byte\"></a>头部 12-byte</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>4-byte 签名 <code>PACK</code></p>\n</li>\n<li>\n<p>4-byte 版本号，网络字节序，一般为 <code>2</code> 或者 <code>3</code></p>\n</li>\n<li>\n<p>4-byte 对象数量</p>\n</li>\n</ul>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">00000000  50 41 43 4b 00 00 00 02  00 00 00 06 90 0d 78 9c\n          ----------- ============ -----------\n          P  A  C  K  version      obj count 6</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_对象条目\"><a class=\"anchor\" href=\"#_对象条目\"></a>对象条目</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>头部之后，是 N 个对象条目，每个条目有两部分：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>n-byte 类型和长度(3-bit 类型, (n-1)*7+4-bit length)</p>\n</li>\n<li>\n<p>条目内容(undeltified 和 deltified 两类)</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_n_byte_类型和长度\"><a class=\"anchor\" href=\"#_n_byte_类型和长度\"></a>n-byte 类型和长度</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>n-byte 类型和长度(3-bit 类型, (n-1)*7+4-bit length)</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">|----------------------------------------+---------------------------|\n| 1-bit flag | 3-bit type | 4-bit length | 1-bit flag | 7-bit length |\n|----------------------------------------+---------------------------|</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>第 1 字节</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>1-bit 标志位: 1 继续读取下一字节；0 结束</p>\n</li>\n<li>\n<p>3-bit 类型</p>\n</li>\n<li>\n<p>4-bit 长度，低位</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>第 2~n 字节</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>1-bit 标志位: 1 继续读取下一字节；0 结束</p>\n</li>\n<li>\n<p>7-bit 长度，高位</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>类型有 6 种，可分为 undeltified 和 deltified 两类:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>undeltified</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>OBJ_COMMIT</code> (1)</p>\n</li>\n<li>\n<p><code>OBJ_TREE</code> (2)</p>\n</li>\n<li>\n<p><code>OBJ_BLOB</code> (3)</p>\n</li>\n<li>\n<p><code>OBJ_TAG</code> (4)</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>deltified</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>OBJ_OFS_DELTA</code> (6)</p>\n</li>\n<li>\n<p><code>OBJ_REF_DELTA</code> (7)</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>长度计算：左字节为低位，右字节为高位</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_undeltified\"><a class=\"anchor\" href=\"#_undeltified\"></a>undeltified</h3>\n<div class=\"paragraph\">\n<p>undeltified 仅包含被压缩的 git 对象数据， 使用 deflate 算法进行压缩。</p>\n</div>\n<div class=\"paragraph\">\n<p>需要通过被压缩数据计算下一条目位置。</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_示例\"><a class=\"anchor\" href=\"#_示例\"></a>示例</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\"># git verify-pack 输出截取\n# SHA-1 type size size-in-packfile offset-in-packfile\n93869920eddd1d8c632cda85537d1547339472c6 commit 208 154 12\n\n# .pack 数据截取\n00000000  50 41 43 4b 00 00 00 02  00 00 00 06 90 0d 78 9c\n                                               =====\n                                               type and length</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>0x90</code> = <code>0b1_001_0000</code></p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>1</code> 表示需要继续读取下一个字节</p>\n</li>\n<li>\n<p><code>001</code> 类型 commit</p>\n</li>\n<li>\n<p><code>0000</code> 长度最低 4 位</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>0x0d</code> = <code>0b0_0001101</code></p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>0</code> 表示当前字节为最后一个字节</p>\n</li>\n<li>\n<p><code>0001101</code> 长度高 7 位</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>所以数据长度为 <code>0b0001101_0000</code> = 0xd0 = 208 字节， 和 <code>verify-pack</code>\n数据一致。</p>\n</div>\n<div class=\"paragraph\">\n<p>这里的数据长度是压缩前的大小，无法直接计算出下一个对象条目的位置，需要通过被压缩数据的来计算。</p>\n</div>\n<div class=\"paragraph\">\n<p><code>verify-pack</code> 中的打包长度 154 byte = 2 byte(类型和长度) + 152\nbyte(压缩数据)。</p>\n</div>\n<div class=\"paragraph\">\n<p>第一个对象条目的偏移是 12(头部长度 12 byte)。</p>\n</div>\n<div class=\"paragraph\">\n<p>通过 ruby 读取压缩数据：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">require 'zlib'\n\nfile = File.open('objects/pack/pack-164f4734388b5ebb26bf4607048798bec6ea6494.pack', 'r')\nfile.seek(12 + 2)                # 偏移 + 类型长度段\nzstream = Zlib::Inflate.new\nputs zstream.inflate(file.read)  # 被压缩的数据，读取的数据超出了压缩数据长度\nputs zstream.total_out           # 208 byte 压缩前数据大小\nputs zstream.total_in            # 152 byte 压缩后数据大小\nzstream.finish\nzstream.close</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>被压缩的数据大小为 152 byte。该类型为 commit，但被压缩的数据中不包含 commit oid，需要重新计算。</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_deltified\"><a class=\"anchor\" href=\"#_deltified\"></a>deltified</h3>\n<div class=\"paragraph\">\n<p>deltified 有两种类型：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>ref delta</p>\n</li>\n<li>\n<p>ofs delta</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>n-byte 偏移</p>\n</li>\n<li>\n<p>被压缩的数据</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_ofs_delta\"><a class=\"anchor\" href=\"#_ofs_delta\"></a>ofs delta</h4>\n<div class=\"paragraph\">\n<p>ofs delta 在包内 offset 位置的获取基础对象，解析获取原始数据，以该原始对象为基础取一个或者多个 (offset, size) 进行拼接形成完整的数据</p>\n</div>\n<div class=\"sect4\">\n<h5 id=\"_基础对象相对偏移\"><a class=\"anchor\" href=\"#_基础对象相对偏移\"></a>基础对象相对偏移</h5>\n<div class=\"paragraph\">\n<p>基础对象相对偏移(pack 内偏移)</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>n-byte 相对偏移，相对于当前条目起始位置的偏移</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">|------------+--------------+------------+--------------|\n| 1-bit flag | 7-bit offset | 1-bit flag | 7-bit offset |\n|------------+--------------+------------+--------------|</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>1-bit 标志位: 1 继续读取下一字节；0 结束</p>\n</li>\n<li>\n<p>7-bit 偏移，左高位，右低位</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>偏移计算：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">byte = read(1)\nbase_offset = byte &amp; 0x7F\n\nwhile (byte &amp; 0x80)\n  byte = read(1)\n  base_offset + 1\n  base_offset = (base_offset &lt;&lt; 7) + (byte &amp; 0x7F)\nend\n\nbase_offset</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>数据的绝对偏移 = 当前条目的偏移 - 相对偏移(base_offset)</p>\n</div>\n</div>\n<div class=\"sect4\">\n<h5 id=\"_被压缩的数据\"><a class=\"anchor\" href=\"#_被压缩的数据\"></a>被压缩的数据</h5>\n<div class=\"paragraph\">\n<p>被压缩的数据，使用 deflate 进行压缩。</p>\n</div>\n<div class=\"paragraph\">\n<p>数据解压后分为：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>n-byte 基础对象大小</p>\n</li>\n<li>\n<p>n-byte 当前对象大小</p>\n</li>\n<li>\n<p>n-byte delta 数据：其中包含多个 (offset, size) 对，该偏移是基础对象原始数据内的偏移</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>对象大小计算：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">|---------------------------+---------------------------|\n| 1-bit flag | 7-bit offset | 1-bit flag | 7-bit offset |\n|---------------------------+---------------------------|</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>第 1~n 字节</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>1-bit 标志位: 1 继续读取下一字节；0 结束</p>\n</li>\n<li>\n<p>7-bit 长度</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>第 1 字节为低位，第 n 字节为高位</p>\n</div>\n<div class=\"paragraph\">\n<p>delta 数据包含偏移和大小，意思是相对于基础 git 对象(未压缩)数据偏移 offset 字节后读取 size 字节。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">+----------+---------+---------+---------+---------+-------+-------+-------+\n| 1xxxxxxx | offset1 | offset2 | offset3 | offset4 | size1 | size2 | size3 |\n+----------+---------+---------+---------+---------+-------+-------+-------+</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>1-byte</code> 标识</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>1-bit</code> 1 继续读取下一段</p>\n</li>\n<li>\n<p><code>3-bit</code> 三个大小位(小端，低位在右侧)，位为 1 时表示对应的偏移字节位不为 0，需要继续读取 1 字节作为长度</p>\n</li>\n<li>\n<p><code>4-bit</code> 四个偏移位(小端，低位在右侧)，位为 1 标识对应的大小字节位不为 0，需要继续读取 1 字节作为偏移</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>0~7-byte</code> 偏移或者大小</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>如</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">+------------+----------+----------+\n| 1_001_0001 | 00110110 | 00011011 |\n|            |  offset1 |    size1 |\n+------------+----------+----------+</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>offset = 0b00110110 = 54, size = 0b00011011 = 27，从基础 git 对象原始数据读取字节范围 [54, 54+27)</p>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_示例_2\"><a class=\"anchor\" href=\"#_示例_2\"></a>示例</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\"># git verify-pack 输出截取\n# SHA-1 type size size-in-packfile offset-in-packfile\n5e0b62e32ef12479435b781852d35d00e7734b6e blob   167 89 335\n37d275cddcb6d23c12c9103c031c0371d49f4831 tree   38 48 424\n# SHA-1 type size size-in-packfile offset-in-packfile depth base-SHA-1\nbc8e5eb13b8e17363744051b29a3e53bad1562cc blob   9 20 472 1 5e0b62e32ef12479435b781852d35d00e7734b6e\n\n# .pack 文件数据截取\n000001d0  a2 49 67 00 d5 2d 0c 72  69 80 09 78 9c 5b ce b8\n                                   == ----- ==============\n000001e0  88 71 42 fb 44 33 69 00  11 8a 03 45 16 4f 47 34\n          ====================================</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>类型长度、基础对象偏移：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>0x69</code> = <code>0b0_100_0101</code></p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>0</code> 不需要读取下一个字节</p>\n</li>\n<li>\n<p><code>110</code> 类型 <code>OBJ_OFS_DELTA</code></p>\n</li>\n<li>\n<p><code>1001</code> 长度 9，被压缩部分长度</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>0x80</code> = <code>0b1_000_0000</code></p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>1</code> 需要读取下一个字节</p>\n</li>\n<li>\n<p><code>000_0000</code> 偏移高 7 位</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p><code>0x09</code> = <code>0b0_000_1001</code></p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>0</code> 不需要读取下一个字节</p>\n</li>\n<li>\n<p><code>000_1001</code> 偏移低 7 位</p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>相对于该节点起点的偏移量计算 ((0b000_0000 + 1) &lt;&lt; 7) + (0b000_1001) = 137</p>\n</div>\n<div class=\"paragraph\">\n<p>绝对偏移量 472(当前对象偏移) - 137(相对偏移) = 335，335 为另一个 blob 对象的偏移</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">require 'zlib'\n\nfile = File.open('objects/pack/pack-164f4734388b5ebb26bf4607048798bec6ea6494.pack', 'r')\nfile.seek(472 + 3) # 3 字节 = 1 byte 类型长度段 + 1 byte 基础对象偏移段\nzstream = Zlib::Inflate.new\nbuf = zstream.inflate(file.read)\nzstream.total_out  # 9  压缩前大小\nzstream.total_in   # 17 压缩后大小\nzstream.finish\nzstream.close\nbuf.bytes.map{|b| b.to_s(16) }.join(' ')\n# a7 1 a2 1 90 87 91 36 1b</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>数据解压后为 <code>a7 1 a2 1 90 87 91 36 1b</code></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">00000000  a7 01\n          1_0100111 0_0000001\n                      0000001_0100111 = 167 (base size)\n00000002  a2 01\n          1_0100010 0_0000001\n                      0000001_0100010 = 162 (size)\n00000006  90 87\n          1_001_0000 10000111\n          offset = 0, size = 10000111 = 135 [0,135]\n00000008  91 36 1b\n          1_001_0001 00110110 00011011\n          offset = 00110110 = 54 , size = 00011011 = 27 [54,27]</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>当前数据 [offset, size] 为 <code>base_object[0, 135]</code> 以及\n<code>base_objects[54, 27]</code></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_校验和_20_byte\"><a class=\"anchor\" href=\"#_校验和_20_byte\"></a>校验和 20-byte</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>以上所有内容的 SHA1 值。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">require 'digest'\n\nfile = File.open('objects/pack/pack-164f4734388b5ebb26bf4607048798bec6ea6494.pack', 'r')\n\nDigest::SHA1.hexdigest(file.read(file.size-20))\nfile.read.unpack1('H*')\n# 164f4734388b5ebb26bf4607048798bec6ea6494</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_仅包含_undeltified_示例\"><a class=\"anchor\" href=\"#_仅包含_undeltified_示例\"></a>仅包含 undeltified 示例</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ git verify-pack --verbose objects/pack/pack-164f4734388b5ebb26bf4607048798bec6ea6494.idx\n93869920eddd1d8c632cda85537d1547339472c6 commit 208 154 12\n6f9ed2b9081959cb7153a50580d8b24a9ae2fd72 commit 157 121 166\n24ed1c14fc5a324338248b2e1056590413c91b3a tree   38 48 287\n5e0b62e32ef12479435b781852d35d00e7734b6e blob   167 89 335\n37d275cddcb6d23c12c9103c031c0371d49f4831 tree   38 48 424\nbc8e5eb13b8e17363744051b29a3e53bad1562cc blob   9 20 472 1 5e0b62e32ef12479435b781852d35d00e7734b6e\nnon delta: 5 objects\nchain length = 1: 1 object\nobjects/pack/pack-164f4734388b5ebb26bf4607048798bec6ea6494.pack: ok\n\n$ hexdump -C objects/pack/pack-164f4734388b5ebb26bf4607048798bec6ea6494.pack\n00000000  50 41 43 4b 00 00 00 02  00 00 00 06 90 0d 78 9c  |PACK..........x.|\n          ----------- ===========  ----------- =====\n           P  A  C  K version 2    obj count 6 1_001_0000 0_0001101\n00000010  8d cb 3d 0a c2 40 10 40  e1 7e 4f b1 bd 10 66 f6  |..=..@.@.~O...f.|\n00000020  2f 3b 20 a2 60 4a 1b 6f  30 d9 9d 68 c0 98 10 26  |/; .`J.o0..h...&amp;|\n00000030  90 e3 9b 23 d8 bc e2 c1  a7 ab 88 75 41 2a 16 0c  |...#.......uA*..|\n00000040  43 89 ec 5d f0 3e bb 90  7b 27 08 31 45 82 80 be  |C..].&gt;..{'.1E...|\n00000050  10 f6 9e cd c2 ab 7c d5  a6 81 a4 ba 9e 20 23 45  |......|...... #E|\n00000060  2a 7d 8b d1 73 84 98 a1  1e 2c 30 b1 b8 a1 b6 ce  |*}..s....,0.....|\n00000070  f0 a6 ef 79 b5 af 51 ed  f9 c8 55 76 9e 96 8f 34  |...y..Q...Uv...4|\n00000080  65 9e 2e 16 53 80 d4 62  22 b2 27 c8 00 e6 b8 d3  |e...S..b\".'.....|\n00000090  a8 2a 7f 03 b3 2d 95 55  ec b3 bb dd 1f 5d a3 bb  |.*...-.U.....]..|\n000000a0  9a 1f 48 eb 3c 21 9d 09  78 9c 8d 8b 41 0a c2 30  |..H.&lt;!..x...A..0|\n                            =====\n                            1_001_1101 0_0001001\n000000b0  10 00 ef 79 c5 de 85 b2  9b c4 24 05 11 05 7b f4  |...y......$...{.|\n000000c0  e2 0f e2 ee aa 05 43 a5  ac d0 e7 9b 27 78 98 39  |......C.....'x.9|\n000000d0  0c 8c ad aa 10 b2 f8 bc  67 11 be 27 f1 81 c9 f3  |........g..'....|\n000000e0  48 18 18 03 75 32 49 1c  1f b1 04 72 f5 6b af 65  |H...u2I....r.k.e|\n000000f0  85 e7 6c 70 e8 3a e9 56  db e7 ad 03 2f ed 08 94  |..lp.:.V..../...|\n00000100  22 a6 4c a9 78 d8 61 41  74 bd b6 d9 4c ff 1e 5c  |\".L.x.aAt...L..\\|\n00000110  15 81 db 74 be 5c a7 c1  36 73 3f 4c ca 2d 9a a6  |...t.\\..6s?L.-..|\n                                                        ==\n                                                        1_010_0110\n00000120  02 78 9c 33 34 30 30 33  31 51 08 72 75 74 f1 75  |.x.340031Q.rut.u|\n          ==\n          0_0000010\n00000130  d5 2b a9 28 61 88 e3 4e  7a ac f7 51 a5 d2 39 ba  |.+.(a..Nz..Q..9.|\n00000140  42 22 e8 72 2c c3 f3 62  ef 3c 00 d6 77 0c b9 b7  |B\".r,..b.&lt;..w...|\n                                                        ==\n                                                        1_011_0111\n00000150  0a 78 9c 33 34 32 36 31  35 33 b7 b0 34 30 44 63  |.x.3426153..40Dc|\n          ==\n          0_0001010\n00000160  71 39 3a 39 bb b8 ba b9  7b 78 7a 79 fb f8 fa f9  |q9:9....{xzy....|\n00000170  07 04 06 05 87 84 86 85  47 44 46 71 25 26 25 a7  |........GDFq%&amp;%.|\n00000180  a4 a6 a5 67 64 66 65 e7  e4 e6 e5 17 14 16 15 97  |...gdfe.........|\n00000190  94 96 95 57 54 56 71 a1  1b 43 9c 81 86 f8 8c 34  |...WTVq..C.....4|\n000001a0  32 e6 02 00 38 27 31 81  a6 02 78 9c 33 34 30 30  |2...8'1...x.3400|\n                                   =====\n                                   1_010_0110 0_0000010\n000001b0  33 31 51 08 72 75 74 f1  75 d5 2b a9 28 61 d8 d3  |31Q.rut.u.+.(a..|\n000001c0  17 b7 d1 ba 4f dc cc dc  85 55 5a 73 f1 53 eb b5  |....O....UZs.S..|\n000001d0  a2 49 67 00 d5 2d 0c 72  69 80 09 78 9c 5b ce b8  |.Ig..-.ri..x.[..|\n                                   == -----\n                                   0_110_1001\n                                      1_0000000 0_0001001\n000001e0  88 71 42 fb 44 33 69 00  11 8a 03 45 16 4f 47 34  |.qB.D3i....E.OG4|\n000001f0  38 8b 5e bb 26 bf 46 07  04 87 98 be c6 ea 64 94  |8.^.&amp;.F.......d.|\n00000200</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/git/git/blob/v2.34.1/Documentation/technical/pack-format.txt\" class=\"bare\">https://github.com/git/git/blob/v2.34.1/Documentation/technical/pack-format.txt</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Git Pack 格式"},"pageAttributes":{"slug":"git-pack-format","category":"git"},"revision":{"date":"2021-12-27","number":"1.0"}}},"pageContext":{"id":"dff78009-79a6-56e3-b4eb-e58a2f2adaa3","pageAttributes__slug":"git-pack-format","__params":{"pageAttributes__slug":"git-pack-format"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}