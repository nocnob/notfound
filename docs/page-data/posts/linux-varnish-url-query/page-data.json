{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/linux-varnish-url-query/","result":{"data":{"asciidoc":{"id":"397cf0b1-b6db-53be-bfe6-1b21710438d5","html":"<div class=\"sect1\">\n<h2 id=\"_url_search_排序\"><a class=\"anchor\" href=\"#_url_search_排序\"></a>URL.search 排序</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>默认配置下 URL 查询参数会对缓存命中率产生影响，<code>GET /raw?a=1&amp;b=2</code> 和 <code>GET /raw?b=2&amp;a=1</code> 会使用不同的缓存。</p>\n</div>\n<div class=\"paragraph\">\n<p>通过对 URL 查询参数进行排序，可提升缓存命中率：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">import std;\n\nsub vcl_recv {\n    set req.url = std.querysort(req.url);\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>导入 VMOD <code>std</code></p>\n</li>\n<li>\n<p>使用 <code>std.querysort</code> 对请求查询参数进行排序</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>后端服务收到的请求查询参数会被重新排序。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_移除_url_search\"><a class=\"anchor\" href=\"#_移除_url_search\"></a>移除 URL.search</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>如果后端不需要处理查询参数，可考虑直接移除掉。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">sub vcl_recv {\n    if (req.url ~ \"\\?\") {\n        set req.url = regsub(req.url, \"\\?.*$\", \"\");\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>如果 URL 中存在 <code>?</code> 则直接移除掉 <code>?</code> 以及之后的所有内容</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_url_search_查询参数白名单\"><a class=\"anchor\" href=\"#_url_search_查询参数白名单\"></a>URL.search 查询参数白名单</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>仅保留指定的查询参数。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">sub vcl_recv {\n    if (req.url ~ \"\\?\") {\n        # Keep query parameters only\n        set req.http.X-Query = regsub(req.url, \"^[^\\?]*\\?\", \"&amp;\");\n        # reserved parameters: \"title\" and \"body\"\n        set req.http.X-Query = regsuball(req.http.X-Query, \"&amp;(?!title=|body=)([^&amp;]*)?\", \"\");\n        # replace the first \"&amp;\"\n        set req.http.X-Query = regsub(req.http.X-Query, \"^&amp;\", \"?\");\n        set req.url = regsub(req.url, \"\\?.*$\", req.http.X-Query);\n        unset req.http.X-Query;\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>提取查询参数到 <code>X-Query</code>，并将 <code>?</code> 替换成 <code>&amp;</code></p>\n</li>\n<li>\n<p>移除 <code>X-Query</code> 中的非 <code>title</code> 和 <code>body</code> 参数</p>\n</li>\n<li>\n<p>将 <code>X-Query</code> 中第一个字符 <code>&amp;</code> 符号替换成 <code>?</code></p>\n</li>\n<li>\n<p>将 <code>url</code> 中的查询参数替换成 <code>X-Query</code></p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://info.varnish-software.com/resources/varnish-6-by-example-book\">Varnish 6 by Example</a>#4.6.2 Sanitizing the URL</p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Varnish 处理查询参数"},"pageAttributes":{"slug":"linux-varnish-url-query","category":"varnish"},"revision":{"date":"2022-03-03","number":"1.0"}}},"pageContext":{"id":"397cf0b1-b6db-53be-bfe6-1b21710438d5","pageAttributes__slug":"linux-varnish-url-query","__params":{"pageAttributes__slug":"linux-varnish-url-query"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}