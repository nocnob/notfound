{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/linux-varnish-http-header/","result":{"data":{"asciidoc":{"id":"b9cbbd1f-8560-57bf-88da-7b0200e26acb","html":"<div class=\"sect1\">\n<h2 id=\"_规则\"><a class=\"anchor\" href=\"#_规则\"></a>规则</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>默认 TTL 为 120s</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>未设置 HTTP 缓存相关头部：缓存 120s</p>\n</li>\n<li>\n<p>设置 <code>Cache-Control: private</code>:不缓存</p>\n</li>\n<li>\n<p>设置 <code>Cache-Control: public</code>: 缓存 120s</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>客户端请求携带 <code>Cookie: something=foobar</code>：不缓存</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>设置 <code>Cache-Control: public, max-age=10</code>：缓存 10s</p>\n</li>\n<li>\n<p>设置 <code>Set-Cookie: something=foobar; path=/; HttpOnly</code>: 不缓存</p>\n</li>\n<li>\n<p>设置 <code>Set-Cookie: something=foobar; path=/; HttpOnly</code> 和 <code>Cache-Control: public</code>：不缓存</p>\n</li>\n<li>\n<p>设置 <code>ETag: \"1872ade88f3013edeb33decd74a4f947\"</code>: 缓存 120s</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>客户端请求未携带 <code>If-None-Match: \"1872ade88f3013edeb33decd74a4f947\"</code>：缓存 120s</p>\n</li>\n<li>\n<p>客户端请求携带 <code>If-None-Match: \"1872ade88f3013edeb33decd74a4f947\"</code>：缓存 120s</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>设置 <code>Last-Modified: Sat, 01 Jan 2022 00:00:00 GMT</code>：缓存 120s</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>客户端携带 <code>If-Modified-Since: Sat, 01 Jan 2022 00:00:00 GMT</code>: 缓存 120s</p>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>总结：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>响应未设置 <code>Cache-Control</code> 头部时（同时也未包含 cookie 相关头部），缓存默认时长</p>\n</li>\n<li>\n<p>响应 <code>Cache-Control</code> 可以控制是否缓存以及缓存时长</p>\n</li>\n<li>\n<p>包含请求包括 <code>Cookie</code>、响应包含 <code>Set-Cookie</code> 时不会缓存</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_缓存包含_cookie_的请求\"><a class=\"anchor\" href=\"#_缓存包含_cookie_的请求\"></a>缓存包含 Cookie 的请求</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_移除请求中_cookie_头部\"><a class=\"anchor\" href=\"#_移除请求中_cookie_头部\"></a>移除请求中 Cookie 头部</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">sub vcl_recv {\n    unset req.http.Cookie;\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>移除掉 HTTP Cookie 头部，后端无法收到 Cookie</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_忽略请求中_cookie_头部\"><a class=\"anchor\" href=\"#_忽略请求中_cookie_头部\"></a>忽略请求中 Cookie 头部</h3>\n<div class=\"paragraph\">\n<p>场景：后端服务通过 Cookie 才能判断数据为公开或私有，对公开数据进行缓存，因此需要将 Cookie 传递给后端。</p>\n</div>\n<div class=\"paragraph\">\n<p>解决方案：</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>varnish 忽略请求中的 Cookie 头部。</p>\n</li>\n<li>\n<p>[可选]后端服务通过 <code>Cache-Control</code> 控制数据能否缓存以及缓存时长。</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://github.com/varnishcache/varnish-cache/blob/6.0/bin/varnishd/builtin.vcl#L64\">默认内置规则</a> 遇到 HTTP 请求头 <code>Authorization</code> 和 <code>Cookie</code> 直接跳过，不缓存：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">    if (req.http.Authorization || req.http.Cookie) {\n        /* Not cacheable by default */\n        return (pass);\n    }</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>可根据https://github.com/varnishcache/varnish-cache/blob/6.0/bin/varnishd/builtin.vcl#L64[默认内置规则]修改 <code>/etc/varnish/default.vcl</code>，即使存在 Cookie 头部，依旧进行缓存：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">sub vcl_recv {\n    if (!req.http.host &amp;&amp;\n      req.esi_level == 0 &amp;&amp;\n      req.proto ~ \"^(?i)HTTP/1.1\") {\n        /* In HTTP/1.1, Host is required. */\n        return (synth(400));\n    }\n    if (req.method == \"GET\" || req.method == \"HEAD\") {\n        /* We only deal with GET and HEAD by default */\n        if (req.http.Cookie) {\n            /* Cacheable */\n            return (hash);\n        }\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>即使存在 Cookie 头部，也进入 hash 阶段</p>\n</li>\n<li>\n<p>其他情况根据内置默认规则进行处理</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>[可选] 为尽量避免缓存私有数据，缓存交给后端响应的 HTTP 头部 <code>Cache-Control`控制。https://github.com/varnishcache/varnish-cache/blob/6.0/bin/varnishd/builtin.vcl#L154[内置默认规则]未携带 `Cache-Control</code> 时，会对缓存数据，修改该规则：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-vcl\" data-lang=\"vcl\">sub vcl_backend_response {\n    if (!beresp.http.Cache-Control || beresp.http.Cache-Control == \"\") {\n        set beresp.uncacheable = true;\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>后端响应未携带 <code>Cache-Control</code> 头部或者为空时，不进行缓存。</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_vary\"><a class=\"anchor\" href=\"#_vary\"></a>Vary</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>响应头部，决定缓存时使用哪些请求头部，为这些头部不同的值缓存一个不同的版本。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">Vary: User-Agent</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>为请求中不同的 <code>User-Agent</code> 缓存不同的版本</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_测试代码\"><a class=\"anchor\" href=\"#_测试代码\"></a>测试代码</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>安装 ruby 依赖：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">sudo gem install sinatra\nsudo gem install sinatra-contrib</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>测试代码：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\"># frozen_string_literal: true\n\nrequire 'sinatra'\nrequire 'sinatra/cookies'\nrequire 'digest'\nrequire 'json'\n\nget '/' do\n  { time: Time.now }.to_json\nend\n\nget '/private' do\n  cache_control :private\n  { time: Time.now, public: false }.to_json\nend\n\nget '/public' do\n  cache_control :public\n  { time: Time.now, public: true, cookies: request.cookies }.to_json\nend\n\nget '/public_10' do\n  cache_control :public, max_age: 10\n  { time: Time.now, public: true, max_age: 10 }.to_json\nend\n\nget '/cookies' do\n  cookies[:something] = 'foobar'\n  { time: Time.now, cookies: true }.to_json\nend\n\nget '/cookies/public' do\n  cookies[:something] = 'foobar'\n  cache_control :public\n  { time: Time.now, cookies: true, public: true }.to_json\nend\n\nget '/etag' do\n  etag Digest::MD5.hexdigest('etag')\n  { time: Time.now, etag: true }.to_json\nend\n\nget '/last-modified' do\n  last_modified Time.new(2022, 1, 1, 8)\n  { time: Time.now, last_modified: true }.to_json\nend\n\nget '/vary' do\n  headers 'Vary' =&gt; 'User-Agent'\n  { time: Time.now, vary: request.user_agent }.to_json\nend</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control\" class=\"bare\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified\" class=\"bare\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Last-Modified</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag\" class=\"bare\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/ETag</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Vary\" class=\"bare\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Vary</a></p>\n</li>\n<li>\n<p><a href=\"https://varnish-cache.org/docs/6.0/users-guide/increasing-your-hitrate.html#http-vary\" class=\"bare\">https://varnish-cache.org/docs/6.0/users-guide/increasing-your-hitrate.html#http-vary</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Linux Varnish 与 HTTP 头部"},"pageAttributes":{"slug":"linux-varnish-http-header","category":"varnish"},"revision":{"date":"2022-02-18","number":"1.0"}}},"pageContext":{"id":"b9cbbd1f-8560-57bf-88da-7b0200e26acb","pageAttributes__slug":"linux-varnish-http-header","__params":{"pageAttributes__slug":"linux-varnish-http-header"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}