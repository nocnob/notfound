{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/grpc-cancellation/","result":{"data":{"asciidoc":{"id":"9dc2d254-6362-559e-83bd-822e27b8e7db","html":"<div class=\"sect1\">\n<h2 id=\"_ruby_grpc_测试\">Ruby gRPC 测试</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>测试代码改自 <a href=\"/posts/grpc-ruby-start/\">Ruby gRPC 基本使用</a></p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_客户端\">客户端</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">def unary(stub, message)\n  printf(\"--- unary ---\\n\")\n\n  op = stub.unary_echo(Examples::EchoRequest.new(message: message), return_op: true) <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n  t = Thread.new do\n    sleep 3\n    op.cancel <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n  end\n\n  m = op.execute\n  t.join\n\n  printf(\"response:\\n\")\n  printf(\" - %s\\n\", m.message)\nrescue GRPC::Cancelled =&gt; e\n  printf(\"failed to call unary_echo: %s\\n\", e)\n  sleep 10 <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\nend</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>立刻返回，并获取 <code>Operation</code> 对象</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>3 秒后取消请求</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>等待 10 秒，避免因程序终止导致网络链接断开</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_服务端\">服务端</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">class ServerImpl &lt; Examples::Echo::Service\n  def unary_echo(req, _call)\n    printf(\"--- UnaryEcho ---\\n\")\n\n    puts _call.cancelled?\n    sleep 10\n    puts _call.cancelled? <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\n    Examples::EchoResponse.new(message: req.message)\n  end\nend</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>Ruby 服务端无法直接检测到 cancel ， <a href=\"https://github.com/grpc/grpc/issues/10144\">Ruby server ActiveCall#cancelled? never returns true.</a></td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_go_grpc_测试\">Go gRPC 测试</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>测试代码改自 <a href=\"/posts/grpc-go-start/\">Go gRPC 基本使用</a></p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_客户端_2\">客户端</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-go\" data-lang=\"go\">func unaryCall(ctx context.Context, c pb.EchoClient, message string) {\n\tfmt.Printf(\"--- unary ---\\n\")\n\n\tctx, cancel := context.WithCancel(ctx)\n\n\tgo func() {\n\t\ttime.Sleep(3 * time.Second) <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\t\tcancel()\n\t}()\n\n\tr, err := c.UnaryEcho(ctx, &amp;pb.EchoRequest{Message: message}) <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n\tif err != nil {\n\t\tlog.Printf(\"failed to call UnaryEcho: %v\", err)\n        time.Sleep(10 * time.Second) <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n\t\treturn\n\t}\n\n\tfmt.Printf(\"response:\\n\")\n\tfmt.Printf(\" - %s\\n\", r.Message)\n}</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>3 秒后取消请求</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>发送请求</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>等待 10 秒，避免因程序终止导致网络链接断开</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_服务端_2\">服务端</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-go\" data-lang=\"go\">func (s *server) UnaryEcho(ctx context.Context, in *pb.EchoRequest) (*pb.EchoResponse, error) {\n\tfmt.Printf(\"--- UnaryEcho ---\\n\")\n\n\ttime.Sleep(5 * time.Second) <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\n\tfmt.Printf(\" - after sleep 5: %v\\n\", ctx.Err())\n\n\treturn &amp;pb.EchoResponse{Message: in.Message}, nil\n}</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>暂停 5 秒，暂停期间会收到客户端发送的取消请求</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_wireshark\">Wireshark</h3>\n<div class=\"paragraph\">\n<p><span class=\"image\"><img src=\"/images/grpc-cancellation-01.png\" alt=\"grpc cancellation 01\"></span></p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>客户端执行取消操作时会发送 <a href=\"https://skyao.io/learning-http2/frame/definition/rst_stream.html\">RST_STREAM 帧</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://github.com/grpc/grpc/tree/v1.52.1/examples/python/cancellation\" class=\"bare\">https://github.com/grpc/grpc/tree/v1.52.1/examples/python/cancellation</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/grpc/grpc-go/tree/v1.53.0/examples/features/cancellation\" class=\"bare\">https://github.com/grpc/grpc-go/tree/v1.53.0/examples/features/cancellation</a></p>\n</li>\n<li>\n<p><a href=\"https://learn.microsoft.com/en-us/aspnet/core/grpc/deadlines-cancellation\" class=\"bare\">https://learn.microsoft.com/en-us/aspnet/core/grpc/deadlines-cancellation</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/grpc/grpc.io/issues/918\" class=\"bare\">https://github.com/grpc/grpc.io/issues/918</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"gRPC 取消请求"},"pageAttributes":{"slug":"grpc-cancellation","category":"grpc"},"revision":{"date":"2023-02-24","number":"1.0"}}},"pageContext":{"id":"9dc2d254-6362-559e-83bd-822e27b8e7db","pageAttributes__slug":"grpc-cancellation","__params":{"pageAttributes__slug":"grpc-cancellation"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}