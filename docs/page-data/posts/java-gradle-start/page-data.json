{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/java-gradle-start/","result":{"data":{"asciidoc":{"id":"114b70a5-462f-5bc8-a8f0-78e1b42c36ad","html":"<div class=\"sect1\">\n<h2 id=\"_gradle_入门\"><a class=\"anchor\" href=\"#_gradle_入门\"></a>Gradle 入门</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Gradle 6.8</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_初始化项目\"><a class=\"anchor\" href=\"#_初始化项目\"></a>初始化项目</h3>\n<div class=\"paragraph\">\n<p><code>gradle init</code> 可初始化项目：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">gradle init --type=basic --dsl=groovy --project-name=example</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>生成的目录结构如下：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">.\n├── build.gradle\n├── .gitattributes\n├── .gitignore\n├── .gradle\n├── gradle/wrapper/\n├── gradlew\n├── gradlew.bat\n└── settings.gradle</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_包含_main_方法的_jar\"><a class=\"anchor\" href=\"#_包含_main_方法的_jar\"></a>包含 Main 方法的 jar</h3>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>新建文件 <code>src/main/java/example/Main.java</code></p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">package example;\n\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>修改 <code>build.gradle</code> ，把所有依赖一起打包：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">plugins {\n    id 'java'\n}\n\njar {\n    manifest {\n        attributes \"Main-Class\": \"example.Main\"\n    }\n    from {\n        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\n        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }\n    }\n}</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>编译、执行</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">gradle build\njava -jar build/libs/example.jar</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_war_plugin\"><a class=\"anchor\" href=\"#_war_plugin\"></a>War Plugin</h3>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>新建文件 <code>src/main/java/example/HelloServlet.java</code></p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">package example;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\n@WebServlet(\"/hello\")\npublic class HelloServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        PrintWriter out = resp.getWriter();\n        out.write(\"Hello World!\");\n        out.close();\n    }\n}</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>修改 <code>build.gradle</code></p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">plugins {\n    id 'war'\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'\n}</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>编译、部署</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">gradle build\ncp build/libs/example.war $CATALINA_HOME/webapps</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>访问 <a href=\"http://localhost:8080/example/hello\" class=\"bare\">http://localhost:8080/example/hello</a> 即可</p>\n</div>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_application_plugin\"><a class=\"anchor\" href=\"#_application_plugin\"></a>Application Plugin</h3>\n<div class=\"paragraph\">\n<p>Application Plugin 能创建一个可分发的 ZIP 文件，其中包含了依赖以及启动脚本。</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>初始化</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">gradle init \\\n       --dsl=groovy \\\n       --package=app \\\n       --project-name=app  \\\n       --test-framework=junit-jupiter \\\n       --type=java-application</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>打包成 zip</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">gradle distZip</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>解压，运行</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">unzip app/build/distributions/app.zip -d /tmp/app\n/tmp/app/bin/app</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_添加测试\"><a class=\"anchor\" href=\"#_添加测试\"></a>添加测试</h3>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>新建 <code>src/main/java/example/Hello.java</code></p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">package example;\n\npublic class Hello {\n    public String getGreeting() {\n        return \"Hello World!\";\n    }\n}</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>新建 <code>src/test/java/example/HelloTest.java</code></p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">package example;\n\nimport org.junit.jupiter.api.Test;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass HelloTest {\n\n    @Test\n    void getGreeting() {\n        assertEquals(new Hello().getGreeting(), \"Hello World?\");\n    }\n}</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>修改 <code>build.gradle</code></p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">plugins {\n    id 'java'\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.1'\n    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.1'\n}\n\ntest {\n    useJUnitPlatform()\n}</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>测试</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">gradle test\ngradle test --info</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://docs.gradle.org/current/userguide/build%5Finit%5Fplugin.html\">Build Init Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.gradle.org/current/userguide/war%5Fplugin.html\">The War Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.gradle.org/current/userguide/java%5Fplugin.html\">The Java Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.gradle.org/current/userguide/application%5Fplugin.html\">The Application Plugin</a></p>\n</li>\n<li>\n<p><a href=\"https://www.baeldung.com/gradle-fat-jar\">Creating a Fat Jar in Gradle</a></p>\n</li>\n<li>\n<p><a href=\"https://docs.gradle.org/current/userguide/java%5Ftesting.html#using%5Fjunit5\">Using JUnit 5</a></p>\n</li>\n<li>\n<p><a href=\"https://stackoverflow.com/questions/49278063/how-do-i-create-an-executable-fat-jar-with-gradle-with-implementation-dependenci\">How do I create an executable fat jar with Gradle with implementation dependencies</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","document":{"title":"Gradle 入门"},"pageAttributes":{"slug":"java-gradle-start","category":"java"},"revision":{"date":"2021-02-16","number":"1.0"}}},"pageContext":{"id":"114b70a5-462f-5bc8-a8f0-78e1b42c36ad","pageAttributes__slug":"java-gradle-start","__params":{"pageAttributes__slug":"java-gradle-start"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}