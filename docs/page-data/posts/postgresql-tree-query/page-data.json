{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/postgresql-tree-query/","result":{"data":{"asciidoc":{"id":"fb60f580-3f46-5c3b-a432-4e8d2a8ef1c5","html":"<div class=\"sect1\">\n<h2 id=\"_postgresql_树形结构查询\"><a class=\"anchor\" href=\"#_postgresql_树形结构查询\"></a>Postgresql 树形结构查询</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>PostgreSQL 13.2</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_创建表\"><a class=\"anchor\" href=\"#_创建表\"></a>创建表</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sql\" data-lang=\"sql\">CREATE TABLE tree (\n  id INTEGER,\n  parent_id INTEGER,\n  name TEXT\n);</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_添加数据\"><a class=\"anchor\" href=\"#_添加数据\"></a>添加数据</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sql\" data-lang=\"sql\">INSERT INTO tree VALUES(1, NULL, '中国');\n\nINSERT INTO tree VALUES(2, 1, '四川');\nINSERT INTO tree VALUES(3, 1, '云南');\n\nINSERT INTO tree VALUES(4, 2, '成都');\nINSERT INTO tree VALUES(5, 2, '绵阳');\nINSERT INTO tree VALUES(6, 3, '昆明');\n\nINSERT INTO tree VALUES(7, 4, '武侯区');</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_查询字节点\"><a class=\"anchor\" href=\"#_查询字节点\"></a>查询字节点</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sql\" data-lang=\"sql\">WITH RECURSIVE cte(id, name, traversal_ids, traversal_names, cycle) AS (\n  VALUES(2, '四川', ARRAY[2], ARRAY['四川'], false)\n  UNION ALL\n  SELECT tree.id, tree.name, cte.traversal_ids || tree.id, cte.traversal_names || tree.name, tree.id = ANY(cte.traversal_ids)\n  FROM tree, cte\n  WHERE tree.parent_id = cte.id AND NOT cycle\n) SELECT id, name, traversal_ids, traversal_names FROM cte;</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_查询父节点\"><a class=\"anchor\" href=\"#_查询父节点\"></a>查询父节点</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-sql\" data-lang=\"sql\">WITH RECURSIVE cte(id, parent_id, traversal_ids, traversal_names, cycle) AS (\n  VALUES(6, 4, ARRAY[6], ARRAY['武侯区'], false)\n  UNION ALL\n  SELECT tree.ID, tree.parent_id, cte.traversal_ids || tree.id, cte.traversal_names || tree.name, tree.id = ANY(cte.traversal_ids)\n  FROM tree, cte\n  WHERE tree.id = cte.parent_id AND NOT cycle\n) SELECT id, parent_id, traversal_ids, traversal_names FROM cte;</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://juejin.cn/post/6844904061414670350\">PostgreSQL_树形结构的递归查询</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","document":{"title":"Postgresql 树形结构查询"},"pageAttributes":{"slug":"postgresql-tree-query","category":"database"},"revision":{"date":"2021-05-15","number":"1.0"}}},"pageContext":{"id":"fb60f580-3f46-5c3b-a432-4e8d2a8ef1c5","pageAttributes__slug":"postgresql-tree-query","__params":{"pageAttributes__slug":"postgresql-tree-query"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}