{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/git-attributes-filter/","result":{"data":{"asciidoc":{"id":"6bf9dd27-4f1c-5588-8962-7df2718011b0","html":"<div class=\"sect1\">\n<h2 id=\"_filter\"><a class=\"anchor\" href=\"#_filter\"></a>filter</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>filter 可以让工作区和版本库中的文件进行自定义转换，如加、解密。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_工作区暂存区和版本库\"><a class=\"anchor\" href=\"#_工作区暂存区和版本库\"></a>工作区、暂存区和版本库：</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>工作区(working directory)：用户可以在工作区查看、编辑文件</p>\n</li>\n<li>\n<p>暂存区(staged): 进入版本库前，临时保存</p>\n</li>\n<li>\n<p>版本库: 数据进入版本库后，可以进行检出操作(checkout)</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>数据可以在三个位置流转：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>工作区修改文件 &#8594; git add &#8594; 暂存区 &#8594; git commit &#8594; 版本库</p>\n</li>\n<li>\n<p>版本库 &#8594; git checkout &#8594; 工作区</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>filter 作用于两个位置:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>工作区 &#8594; filter &#8594; 暂存区 &#8594; 版本库</p>\n</li>\n<li>\n<p>版本库 &#8594; filter &#8594; 工作区</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>所以，一个 filter 应该存在两种操作，作用于两个不同的过程。</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_添加一个_filter\"><a class=\"anchor\" href=\"#_添加一个_filter\"></a>添加一个 filter</h3>\n<div class=\"sect3\">\n<h4 id=\"_gitattributes\"><a class=\"anchor\" href=\"#_gitattributes\"></a><code>.gitattributes</code></h4>\n<div class=\"paragraph\">\n<p>编辑 <code>.gitattributes</code>:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-conf\" data-lang=\"conf\">*.xx filter=your_filter</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>所有`*.xx` 文件都需要经过 <code>your_filter</code> 处理，那 <code>your_filter</code>\n去哪里找？答案是 <code>git config</code>:</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_git_config\"><a class=\"anchor\" href=\"#_git_config\"></a>git config</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">git config filter.your_filter.clean your_clean_program\ngit config filter.your_filter.smudge your_smudge_program</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>一个 filter 需要两种操作配合： - <code>clean</code>\n数据从工作区进入暂存区时，会先经过 <code>your_clean_program</code>\n进行处理，暂存区的数据之后可提交到版本库 - <code>smudge</code>\n数据从版本库进入工作区时，通过 <code>your_smudge_program</code> 进行处理</p>\n</div>\n<div class=\"paragraph\">\n<p>也就是 <code>clean</code> 在 git add 时调用，而 <code>smudge</code> 在 git checkout 时执行。\n两个操作可构成一个对称，如：通过 <code>clean</code>\n加密文件，此时版本库中的保存密文，再通过 <code>smudge</code>\n解密，工作区中的数据就为明文。</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_clean_和_smudge\"><a class=\"anchor\" href=\"#_clean_和_smudge\"></a>clean 和 smudge</h4>\n<div class=\"paragraph\">\n<p><code>your_clean_program</code> 和 <code>your_smudge_program</code>\n为可执行文件，只要能做到从标准输入读取数据，将结果打印到标准输出即可。</p>\n</div>\n<div class=\"paragraph\">\n<p>一个简单的例子，工作区明文，而版本库存储 base64。Linux 下有一个工具\n<code>openssl</code> 可以处理 base64:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 编码\necho \"Hello World\" | openssl enc -base64\nSGVsbG8gV29ybGQK\n\n# 解码\necho \"SGVsbG8gV29ybGQK\" | openssl enc -base64 -d\nHello World</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><code>openssl</code> 从标准输入读取数据，并将结果打印到标准输出，因此可作为\nfilter。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># 设置 filter\ngit config filter.your_filter.clean \"openssl enc -base64\"\ngit config filter.your_filter.smudge \"openssl enc -base64 -d\"\n\n# 添加文件\necho \"Hello World\" &gt; main.xx\ngit add main.xx .gitattributes</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>通过 <code>git add</code> 数据保存到暂存区，可看到差异被 base64 编码：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\">diff --git a/.gitattributes b/.gitattributes\nnew file mode 100644\nindex 0000000..89a19f1\n--- /dev/null\n+++ b/.gitattributes\n@@ -0,0 +1 @@\n+*.xx filter=your_filter\ndiff --git a/main.xx b/main.xx\nnew file mode 100644\nindex 0000000..5066d5a\n--- /dev/null\n+++ b/main.xx\n@@ -0,0 +1 @@\n+SGVsbG8gV29ybGQK</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>执行 <code>git commit</code>，数据进入版本库，通过 <code>git show HEAD:main.xx</code>\n可看到版本库里保存的是 base64 编码后的内容。</p>\n</div>\n<div class=\"paragraph\">\n<p>删除 <code>main.xx</code> ，然后重新检出文件:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">rm main.xx\ngit checkout main.xx\ncat main.xx</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>工作区的文件保存了解码后的内容。</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"http://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E5%B1%9E%E6%80%A7\" class=\"bare\">http://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E5%B1%9E%E6%80%A7</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Git Attributes filter 配置"},"pageAttributes":{"slug":"git-attributes-filter","category":"git"},"revision":{"date":"2021-09-17","number":"1.0"}}},"pageContext":{"id":"6bf9dd27-4f1c-5588-8962-7df2718011b0","pageAttributes__slug":"git-attributes-filter","__params":{"pageAttributes__slug":"git-attributes-filter"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}