{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/monitoring-socket/","result":{"data":{"asciidoc":{"id":"acdd7341-f781-5c65-80d7-caa89e9b8062","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>系统环境 Ubuntu 18.04</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>通过 gem <a href=\"https://gems.ruby-china.com/gems/raindrops\">raindrops</a> 可以获取连接数量，包括正在建立的连接数和已完成的连接数。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_连接数\"><a class=\"anchor\" href=\"#_连接数\"></a>连接数</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>包括两种连接: UNIX domain socket 和 TCP socket。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_unix_domain_socket\"><a class=\"anchor\" href=\"#_unix_domain_socket\"></a>UNIX domain socket</h3>\n<div class=\"sect3\">\n<h4 id=\"_用法\"><a class=\"anchor\" href=\"#_用法\"></a>用法</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">require 'raindrops'\n\npaths = ['/run/containerd/containerd.sock']\nRaindrops::Linux.unix_listener_stats(paths)\n# {\"/run/containerd/containerd.sock\"=&gt;#&lt;struct Raindrops::ListenStats active=2, queued=0&gt;}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>active=2, queued=0</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_原理\"><a class=\"anchor\" href=\"#_原理\"></a>原理</h4>\n<div class=\"paragraph\">\n<p>UNIX domain sockets 连接信息保存在 <code>/proc/net/unix</code> 中，需要解析该文件。</p>\n</div>\n<div class=\"paragraph\">\n<p>如：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ cat /proc/net/unix | grep \"containerd.sock\"\n  Num             RefCount Protocol Flags   Type  St Inode Path\n0000000000000000: 00000002 00000000 00010000 0001 01 26912 /run/containerd/containerd.sock\n0000000000000000: 00000003 00000000 00000000 0001 03 31496 /run/containerd/containerd.sock\n0000000000000000: 00000003 00000000 00000000 0001 03 28660 /run/containerd/containerd.sock</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>每个字段的含义，可以参考 <code>man 5 proc</code>：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-man\" data-lang=\"man\">The fields are as follows:\n\nNum:      the kernel table slot number.\nRefCount: the number of users of the socket.\nProtocol: currently always 0.\nFlags:    the internal kernel flags holding the status of the socket.\nType:     the socket type.  For SOCK_STREAM sockets, this is 0001; for SOCK_DGRAM sockets, it is  0002;  and  for  SOCK_SEQ‐\n          PACKET sockets, it is 0005.\nSt:       the internal state of the socket.\nPath:     the  bound path (if any) of the socket.  Sockets in the abstract namespace are included in the list, and are shown\n          with a Path that commences with the character '@'.</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>因此可以通过字段 <code>St</code> 获取连接状态信息，man page 中没有说明数字的具体含义，好在https://yhbt.net/raindrops.git/tree/lib/raindrops/linux.rb#n19[raindrops 源码注释]中有提到：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">Get ListenStats from an array of +paths+\n\nSocket state mapping from integer =&gt; symbol, based on socket_state\nenum from include/linux/net.h in the \\Linux kernel:\n    typedef enum {\n            SS_FREE = 0,              /* not allocated                */\n            SS_UNCONNECTED,           /* unconnected to any socket    */\n            SS_CONNECTING,            /* in process of connecting     */\n            SS_CONNECTED,             /* connected to socket          */\n            SS_DISCONNECTING          /* in process of disconnecting  */\n    } socket_state;\n* SS_CONNECTING maps to ListenStats#queued\n* SS_CONNECTED maps to ListenStats#active</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>所以 <code>St</code> 数字的含义为： - <code>2</code> 正在连接 - <code>3</code> 连接已建立</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_tcp_socket\"><a class=\"anchor\" href=\"#_tcp_socket\"></a>TCP socket</h3>\n<div class=\"sect3\">\n<h4 id=\"_用法_2\"><a class=\"anchor\" href=\"#_用法_2\"></a>用法</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">require 'raindrops'\n\nRaindrops::Linux.tcp_listener_stats(\"127.0.0.1:6379\")\n# {\"127.0.0.1:6379\"=&gt;#&lt;struct Raindrops::ListenStats active=1, queued=0&gt;}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_原理_2\"><a class=\"anchor\" href=\"#_原理_2\"></a>原理</h4>\n<div class=\"paragraph\">\n<p>从源码来看，是使用 <code>recvmsg</code> 向内核发送消息来获取 socket 的信息，看起来有点复杂，至少 man page 没有介绍，暂且搁置。</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_其他\"><a class=\"anchor\" href=\"#_其他\"></a>其他</h3>\n<div class=\"paragraph\">\n<p>通过 <code>lsof</code> 命令也可以看到每个连接状态信息：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ sudo lsof -i:6379\nCOMMAND    PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nredis-ser 1035 redis    6u  IPv4  25872      0t0  TCP localhost:6379 (LISTEN)\nredis-ser 1035 redis    7u  IPv6  25877      0t0  TCP ip6-localhost:6379 (LISTEN)\nredis-ser 1035 redis    8u  IPv4  67074      0t0  TCP localhost:6379-&gt;localhost:59232 (ESTABLISHED)\nredis-cli 6313 me       3u  IPv4  70052      0t0  TCP localhost:59232-&gt;localhost:6379 (ESTABLISHED)</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://yhbt.net/raindrops.git\">raindrops</a></p>\n</li>\n<li>\n<p><a href=\"http://edsionte.com/techblog/archives/4140\">Netlink编程-使用NETLINK_INET_DIAG协议</a></p>\n</li>\n<li>\n<p><a href=\"http://www.cnitblog.com/chlclan/archive/2006/06/20/12546.aspx\">netlink 编程介绍(V0.2)</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"监控 socket 连接数"},"pageAttributes":{"slug":"monitoring-socket","category":"monitoring"},"revision":{"date":"2020-05-18","number":"1.0"}}},"pageContext":{"id":"acdd7341-f781-5c65-80d7-caa89e9b8062","pageAttributes__slug":"monitoring-socket","__params":{"pageAttributes__slug":"monitoring-socket"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}