{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/git-binary/","result":{"data":{"asciidoc":{"id":"fa928667-95a7-518a-abb3-632929f4eb04","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Git 区分二进制和文本文件？</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_源码\"><a class=\"anchor\" href=\"#_源码\"></a>源码</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Git 是通过函数 <a href=\"https://github.com/git/git/blob/d8437c57fa0752716dde2d3747e7c22bf7ce2e41/xdiff-interface.c#L188\">buffer_is_binary</a> 识别二进制：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-c\" data-lang=\"c\">#define FIRST_FEW_BYTES 8000\nint buffer_is_binary(const char *ptr, unsigned long size)\n{\n  if (FIRST_FEW_BYTES &lt; size)\n    size = FIRST_FEW_BYTES;\n  return !!memchr(ptr, 0, size);\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>文件前 8000 个字节与 <code>\\0</code> 进行比较，非文件末尾出现 <code>\\0</code> 就认为是二进制</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>C 语言中，字符串一定是以 <code>\\0</code> 结束，简单的想一想，感觉没毛病。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_问题\"><a class=\"anchor\" href=\"#_问题\"></a>问题</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Q: 多字节文件编码中，难道其中的某个字节不会出现 <code>\\0</code>？</p>\n<div class=\"paragraph\">\n<p>文件内容`1`，保存为 utf16：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ file utf16.txt\nutf16.txt: Little-endian UTF-16 Unicode text, with no line terminators\n\n$ hexdump -C utf16.txt\n00000000  ff fe 31 00 0a 00                                 |..1...|\n00000006</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>查看差异时，会被错误识别为二进制文件：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\">diff --git a/utf16.txt b/utf16.txt\nnew file mode 100644\nindex 0000000..0811156\nBinary files /dev/null and b/utf16.txt differ</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>然而 GitHub 不会将 UTF-16 识别为二进制，说明和 Git 命令识别方式有区别。</p>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_charlock_holmes\"><a class=\"anchor\" href=\"#_charlock_holmes\"></a>charlock_holmes</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>GitHub 使用 charlock_holmes 来检测二进制文件， 该 gem 包方法将常见的 <a href=\"https://github.com/brianmario/charlock_holmes/blob/e52cb2ec6d31615836935344de47998c4e399227/ext/charlock_holmes/encoding_detector.c#L61\">文件类型头部列出</a>（包括 UTF-16 和 UTF-32）单独进行比较，以减少误伤：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-c\" data-lang=\"c\">static int detect_binary_content(VALUE self, VALUE rb_str) {\n    size_t buf_len, scan_len;\n    const char *buf;\n\n  /*\n   * 省略大部分代码\n   */\n\n    if (buf_len &gt; 1) {\n        // UTF-16BE\n        if (!memcmp(buf, \"\\xfe\\xff\", 2))\n            return 0;\n\n        // UTF-16LE\n        if (!memcmp(buf, \"\\xff\\xfe\", 2))\n            return 0;\n    }\n\n    /*\n     * If we got this far, any NULL bytes within the `scan_len`\n     * range will likely mean the contents are binary.\n     */\n    if (scan_len &lt; buf_len)\n        buf_len = scan_len;\n    return !!memchr(buf, 0, buf_len);\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://zh.wikipedia.org/wiki/UTF-16\">UTF-16</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/brianmario/charlock_holmes\">charlock_holmes</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Git 如何识别二进制文件"},"pageAttributes":{"slug":"git-binary","category":"git"},"revision":{"date":"2020-05-16","number":"1.0"}}},"pageContext":{"id":"fa928667-95a7-518a-abb3-632929f4eb04","pageAttributes__slug":"git-binary","__params":{"pageAttributes__slug":"git-binary"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}