{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/gatsby-asciidoc-start/","result":{"data":{"asciidoc":{"id":"76e3f5a0-22d9-5f3e-84ce-e5273c993562","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>AsciiDoc 比 Markdown 更规范、灵活、严谨，缺点是插件没有 Markdown 丰富。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_创建\"><a class=\"anchor\" href=\"#_创建\"></a>创建</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_安装\"><a class=\"anchor\" href=\"#_安装\"></a>安装</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm install -g gatsby-cli</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_生成项目\"><a class=\"anchor\" href=\"#_生成项目\"></a>生成项目</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ gatsby new\n\nWhat would you like to call your site?\n? ‣ notfound <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nWhat would you like to name the folder where your site will be created?\n? test/ notfound <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n? Will you be using JavaScript or TypeScript?\n(Single choice) Arrow keys to move, enter to confirm\n  JavaScript\n▸ TypeScript <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n? Will you be using a CMS?\n(Single choice) Arrow keys to move, enter to confirm\n▸ No (or I'll add it later) <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n  –\n  Contentful\n  DatoCMS\n  Netlify CMS\n  Sanity\n  Shopify\n  WordPress\n? Would you like to install a styling system?\n(Single choice) Arrow keys to move, enter to confirm\n▸ No (or I'll add it later) <i class=\"conum\" data-value=\"5\"></i><b>(5)</b>\n  –\n  Emotion\n  PostCSS\n  Sass\n  styled-components\n  Theme UI\n  vanilla-extract\n? Would you like to install additional features with other plugins?\n(Multiple choice) Use arrow keys to move, spacebar to select, and confirm with an enter on \"Done\"\n ◯ Add the Google Analytics tracking script\n ◉ Add responsive images <i class=\"conum\" data-value=\"6\"></i><b>(6)</b>\n ◉ Add page meta tags with React Helmet <i class=\"conum\" data-value=\"7\"></i><b>(7)</b>\n ◉ Add an automatic sitemap <i class=\"conum\" data-value=\"8\"></i><b>(8)</b>\n ◉ Generate a manifest file <i class=\"conum\" data-value=\"9\"></i><b>(9)</b>\n ◯ Add Markdown and MDX support\n ◯ Add Markdown support (without MDX)\n  ─────\n▸ Done</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>网站名称 notfound</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>目录名称 notfound</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>使用 TypeScript</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>不用 CMS</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"5\"></i><b>5</b></td>\n<td>不用 sytling system</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"6\"></i><b>6</b></td>\n<td>插件：responsive images</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"7\"></i><b>7</b></td>\n<td>插件：react helmet</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"8\"></i><b>8</b></td>\n<td>插件：sitemap</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"9\"></i><b>9</b></td>\n<td>插件：manifest file</td>\n</tr>\n</table>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_asciidoc_插件\"><a class=\"anchor\" href=\"#_asciidoc_插件\"></a>asciidoc 插件</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm install gatsby-transformer-asciidoc <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nnpm i font-awesome <i class=\"conum\" data-value=\"2\"></i><b>(2)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><a href=\"https://www.gatsbyjs.com/plugins/gatsby-transformer-asciidoc/\">asciidoc 插件</a></td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>添加 font-awesome， <a href=\"https://docs.asciidoctor.org/asciidoc/latest/attributes/document-attributes-ref/#image-and-icon-attributes\">提供给 asciidoc 使用</a></td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>修改配置：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">gatsby-config.ts</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ts\" data-lang=\"ts\">graphqlTypegen: true, <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nplugins: [\n  {\n    resolve: \"gatsby-transformer-asciidoc\",\n    options: {\n      attributes: {\n        icons: \"font\", <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n        showtitle: false, <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n      },\n    },\n  },\n  { <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n    resolve: \"gatsby-source-filesystem\",\n    options: {\n      name: \"posts\",\n      path: \"./src/pages/posts\",\n    },\n    __key: \"posts\",\n  },\n]</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td><a href=\"https://www.gatsbyjs.com/docs/how-to/local-development/graphql-typegen#prerequisites\">GraphQL 类型生成</a></td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>使用 font awesome</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>不显示一级标题</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>将 asciidoc 文件(后缀为 <code>.adoc</code>) 放在 <code>./src/pages/posts</code> 目录下，作为 graphql 资源</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_添加_adoc_以及页面\"><a class=\"anchor\" href=\"#_添加_adoc_以及页面\"></a>添加 adoc 以及页面</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>添加 adoc 文件：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">./src/pages/posts/hello.adoc</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-adoc\" data-lang=\"adoc\">= Hello, AsciiDoc!\nFirstname Lastname &lt;author@asciidoctor.org&gt; <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n1.0, 1970-01-01: Asciidoctor article template <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n\n:page-slug: hello <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n:page-category: asciidoc <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\n:page-draft: true <i class=\"conum\" data-value=\"5\"></i><b>(5)</b>\n\nThis is an interactive editor.\nUse it to try https://asciidoc.org[AsciiDoc].\n\n== Section Title\n\n* A list item\n* Another list item\n\n[,ruby]\n----\nputs 'Hello, World!'\n----</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>姓、名和邮箱，用空格分隔</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>版本号、日期和备注，分别用 <code>,</code> 和 <code>:</code> 分隔</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>自定义属性： <code>slug</code> 用作 'url'</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>自定义属性： <code>category</code> 用作分类</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"5\"></i><b>5</b></td>\n<td>自定义属性： <code>draft</code> 用作草稿</td>\n</tr>\n</table>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm start <i class=\"conum\" data-value=\"1\"></i><b>(1)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>开发模式启动服务</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>访问 <a href=\"http://localhost:8000/___graphql\" class=\"bare\">http://localhost:8000/___graphql</a> ，输入 graphql 查询，可以看到结果</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-graphql\" data-lang=\"graphql\">query Post {\n  asciidoc {\n    pageAttributes {\n      slug <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n    }\n  }\n}</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>自定义页面属性</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>创建文件 <code>src/pages/posts/{asciidoc.pageAttributes__slug}.tsx</code> gatsby 使用 <code>asciidoc.pageAttributes.slug</code> 的值作为路由的一部分，如 <code>src/pages/posts/hello.adoc</code> 路由为 <code>/posts/hello</code>。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">src/pages/posts/{asciidoc.pageAttributes__slug}.tsx</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ts\" data-lang=\"ts\">@import \"font-awesome/css/font-awesome.css\";\n@import \"./asciidoctor.css\"; <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n\nconst Template = (props: PageProps&lt;Queries.PostQuery&gt;) =&gt; { <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n  const post = props.data.asciidoc; <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n\n  return (\n    &lt;article className=\"post\"&gt;\n      &lt;header&gt;\n        &lt;h1&gt;{post?.document?.title}&lt;/h1&gt;\n        &lt;div className=\"post-meta\"&gt;\n          &lt;div className=\"post-meta-item\"&gt;版本 {post?.revision?.number}&lt;/div&gt;\n          &lt;div className=\"post-meta-item\"&gt;\n            发表于\n            &lt;time dateTime={post?.revision?.date || \"1970-01-01\"}&gt;\n              {post?.revision?.date || \"1970-01-01\"}\n            &lt;/time&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/header&gt;\n      &lt;div dangerouslySetInnerHTML={{ __html: post?.html || \"\" }} /&gt;\n    &lt;/article&gt;\n  );\n};\n\n<i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\nexport const query = graphql`\n  query Post($id: String!) {\n    asciidoc(id: { eq: $id }) {\n      id\n      html\n      document {\n        title\n      }\n      pageAttributes {\n        slug\n        category\n      }\n      revision {\n        date\n        number\n      }\n    }\n  }\n`;\n\nexport default Template;</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>页面样式来自 <a href=\"https://github.com/asciidoctor/asciidoctor/blob/main/src/stylesheets/asciidoctor.css\">asciidoctor</a> ，也可通过 <a href=\"https://github.com/darshandsoni/asciidoctor-skins\">asciidoctor-skins</a> 获取不同主题</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>类型 <code>Queries.PostQuery</code> 在运行 <code>npm start</code> 后，会根据 graphql 自动生成</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>graphql 查询结果</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>grapqhl 页面查询语句。启动 gatsby 后，会根据该语句自动生成类型文件 <code>src/gatsby-types.d.ts</code>。查询参数 <code>id</code> 来自 <code>pageContext</code>，可通过 <code>props.pageContext.id</code> 访问。</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>gatsby 将会遍历 <code>src/pages/posts/*.adoc</code> 为每个文件生成页面(如 <code>public/posts/hello/index.html</code>)和数据(如 <code>public/page-data/posts/hello/page-data.json</code>)。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_语法高亮\"><a class=\"anchor\" href=\"#_语法高亮\"></a>语法高亮</h3>\n<div class=\"paragraph\">\n<p>语法高了可通过后端或者前端处理。</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_后端处理\"><a class=\"anchor\" href=\"#_后端处理\"></a>后端处理</h4>\n<div class=\"paragraph\">\n<p><a href=\"https://www.gatsbyjs.com/plugins/gatsby-transformer-asciidoc/#define-a-custom-converter\">通过自定义 Converter</a>在处理代码相关 node 时进行语法高亮。</p>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_前端处理\"><a class=\"anchor\" href=\"#_前端处理\"></a>前端处理</h4>\n<div class=\"paragraph\">\n<p>可以使用 highlight.js 或者 prismjs 等。这里我们使用 prismjs</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm install prismjs</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>adoc 支持页面中插入 <a href=\"https://docs.asciidoctor.org/asciidoc/latest/verbatim/callouts/\">标注</a>，解析为 HTML 会生成如 <code>&lt;i class=\"conum\" data-value=\"1\"&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;</code> 这样的 HTML 标签，但 prismjs 在高亮前会 <a href=\"https://prismjs.com/faq.html#why-is-pre-existing-html-stripped-off\">剔除掉 HTML</a> 导致标注无法正常显示，所以需要对标注进行特殊处理。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ts\" data-lang=\"ts\">const placeholder = \"PLACEHOLDER_COLUMN{n}\";\nconst placeholderRegex = RegExp(\"PLACEHOLDER_COLUMN(\\\\d+)\", \"g\");\nconst conum = '&lt;i class=\"conum\" data-value=\"{n}\"&gt;&lt;/i&gt;&lt;b&gt;{n}&lt;/b&gt;';\nconst conumRegex = RegExp(\n  '&lt;i class=\"conum\" data-value=\"(\\\\d+)\"&gt;&lt;/i&gt;&lt;b&gt;\\\\(\\\\d+\\\\)&lt;/b&gt;',\n  \"g\"\n);\n\nconst Template = (props: PageProps&lt;Queries.PostQuery&gt;) =&gt; {\n  const post = props.data.asciidoc;\n  const [html, setHtml] = React.useState(\"\");\n\n  React.useEffect(() =&gt; {\n    if (post?.html) {\n      const doc = new DOMParser().parseFromString(post.html, \"text/html\");\n      doc.querySelectorAll(\"pre.highlight &gt; code\").forEach(function (el) {\n        if (!el.getAttribute(\"data-lang\")) return;\n        <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n        el.innerHTML = el.innerHTML.replace(conumRegex, (_, i) =&gt;\n          placeholder.replace(\"{n}\", i)\n        );\n        <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n        Prism.highlightElement(el, false);\n        <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\n        el.innerHTML = el.innerHTML.replace(placeholderRegex, (_, i) =&gt;\n          conum.replaceAll(\"{n}\", i)\n        );\n      });\n      setHtml(doc.body.innerHTML);\n    } else {\n      setHtml(\"\");\n    }\n  }, [post?.html]);\n\n  return &lt;&gt;...&lt;/&gt;\n}</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>前置处理：调标注相关的 HTML 用特殊字符替换</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>高亮</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>后置处理：特殊字符还原成标注</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>如果特殊字符被高亮了，就会无法替换回来，所以特殊字符需要足够特殊。</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_部署脚本\"><a class=\"anchor\" href=\"#_部署脚本\"></a>部署脚本</h3>\n<div class=\"paragraph\">\n<p>构建生成文件放到 <code>pages</code> 分支的 <code>docs</code> 目录下。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">deploy.sh</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">#!/bin/bash\n\nnpm run clean <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nnpm run build <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\ngit checkout pages <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\nrm -rf docs <i class=\"conum\" data-value=\"4\"></i><b>(4)</b>\nmv public docs <i class=\"conum\" data-value=\"5\"></i><b>(5)</b>\ngit add docs/ <i class=\"conum\" data-value=\"6\"></i><b>(6)</b>\ngit commit -m \"deploy $(date)\" <i class=\"conum\" data-value=\"7\"></i><b>(7)</b>\ngit checkout main <i class=\"conum\" data-value=\"8\"></i><b>(8)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>清理缓存</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>构建</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>切换分支</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"4\"></i><b>4</b></td>\n<td>删除旧文件</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"5\"></i><b>5</b></td>\n<td>目录重命名</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"6\"></i><b>6</b></td>\n<td>添加到版本库</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"7\"></i><b>7</b></td>\n<td>提交到版本库</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"8\"></i><b>8</b></td>\n<td>切换回来</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>之后执行 <code>git push</code> 即可</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_其他\"><a class=\"anchor\" href=\"#_其他\"></a>其他</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>通过 <code>npm run typecheck</code> 进行类型检查。</p>\n</li>\n<li>\n<p>如果页面出现奇怪错误，可尝试删除 <code>.cache</code> 目录。</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://www.gatsbyjs.com/docs/tutorial/\" class=\"bare\">https://www.gatsbyjs.com/docs/tutorial/</a></p>\n</li>\n<li>\n<p><a href=\"https://www.gatsbyjs.com/plugins/gatsby-transformer-asciidoc/\" class=\"bare\">https://www.gatsbyjs.com/plugins/gatsby-transformer-asciidoc/</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/PrismJS/prism/issues/651#issuecomment-127472365\" class=\"bare\">https://github.com/PrismJS/prism/issues/651#issuecomment-127472365</a></p>\n</li>\n<li>\n<p><a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\" class=\"bare\">https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Gatsby + AsciiDoc"},"pageAttributes":{"slug":"gatsby-asciidoc-start","category":"blog"},"revision":{"date":"2022-06-03","number":"1.0"}}},"pageContext":{"id":"76e3f5a0-22d9-5f3e-84ce-e5273c993562","pageAttributes__slug":"gatsby-asciidoc-start","__params":{"pageAttributes__slug":"gatsby-asciidoc-start"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}