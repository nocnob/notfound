{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/git-server-hooks/","result":{"data":{"asciidoc":{"id":"9d639142-2631-5826-806e-954881ea88ec","html":"<div class=\"sect1\">\n<h2 id=\"_准备\"><a class=\"anchor\" href=\"#_准备\"></a>准备</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_概览\"><a class=\"anchor\" href=\"#_概览\"></a>概览</h3>\n<div class=\"paragraph\">\n<p>推送两个分支过程：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nparticipant \"git server\" as git\nparticipant \"pre-receive\" as pre_receive\nparticipant update\nparticipant \"post-receive\" as post_receive\n\nactivate git\n  git --&gt; pre_receive : stdin\\noldrev newrev refname\\noldrev newrev refname\n    activate pre_receive\n    git &lt;-- pre_receive\n    deactivate pre_receive\n  git --&gt; update : cmd args\\nrefname oldrev newrev\n    activate update\n    git &lt;-- update\n    deactivate update\n  git --&gt; update : cmd args\\nrefname oldrev newrev\n    activate update\n    git &lt;-- update\n    deactivate update\n  git --&gt; post_receive : stdin\\noldrev newrev refname\\noldrev newrev refname\n    activate post_receive\n    git &lt;-- post_receive\n    deactivate post_receive\ndeactivate git\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>pre-receive、post-receive 从标准输入读取数据</p>\n</li>\n<li>\n<p>update 从命令行参数读取数据</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_测试仓库\"><a class=\"anchor\" href=\"#_测试仓库\"></a>测试仓库</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">git init --bare git-server-hook.git <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\ngit clone git-server-hook.git <i class=\"conum\" data-value=\"2\"></i><b>(2)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>初始化一个裸仓库，服务端使用该方式保存数据</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>直接本地拉取代码，之后用户推送测试</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_git_钩子\"><a class=\"anchor\" href=\"#_git_钩子\"></a>Git 钩子</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_pre_receive\"><a class=\"anchor\" href=\"#_pre_receive\"></a>pre-receive</h3>\n<div class=\"paragraph\">\n<p>特点：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>无参数调用</p>\n</li>\n<li>\n<p>标准输入传递引用信息</p>\n</li>\n<li>\n<p>以非零值退出，所有的推送内容都不会被接受</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>用途：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>钩子阻止对引用进行非快进（non-fast-forward）的更新</p>\n</li>\n<li>\n<p>对该推送所修改的所有引用和文件进行访问控制</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>示例：</p>\n</div>\n<div class=\"paragraph\">\n<p>在裸仓库新建文件 <code>hooks/pre-receive</code> ，并为该文件添加可执行权限：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">hooks/pre-receive</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">#!/bin/sh\n\necho \"------------\"\nenv | grep \"GIT_\" <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\necho \"------------\"\n\n# sha1-old SP sha1-new SP refname LF <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\nwhile read oldrev newrev refname\ndo\n    printf \"%-40s %-40s %s\\n\"  $oldrev $newrev $refname\ndone\necho \"------------\"\n\nexit 1 <i class=\"conum\" data-value=\"3\"></i><b>(3)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>钩子在执行时，会传入一些 GIT 相关环境变量</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>从标准输入读取推送引用信息，格式为： <code>sha1-old SP sha1-new SP refname LF</code>，推送多个引用（分支、标签）会有多行。</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>模拟失败情况，会阻止所有引用更新</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>测试推送两个分支：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ git push origin main:main main:master\n枚举对象中: 3, 完成.\n对象计数中: 100% (3/3), 完成.\n写入对象中: 100% (3/3), 199 字节 | 199.00 KiB/s, 完成.\n总共 3（差异 0），复用 0（差异 0），包复用 0\nremote: ------------\nremote: GIT_ALTERNATE_OBJECT_DIRECTORIES=/tmp/git/git-server-hook.git/./objects\nremote: GIT_QUARANTINE_PATH=/tmp/git/git-server-hook.git/./objects/incoming-behIHS\nremote: GIT_EXEC_PATH=/usr/lib/git-core\nremote: GIT_DIR=.\nremote: GIT_PUSH_OPTION_COUNT=0\nremote: GIT_OBJECT_DIRECTORY=/tmp/git/git-server-hook.git/./objects/incoming-behIHS\nremote: ------------\nremote: 0000000000000000000000000000000000000000 b1f48e4fa15d08018b08052af4c0063d689a12cf refs/heads/main\nremote: 0000000000000000000000000000000000000000 b1f48e4fa15d08018b08052af4c0063d689a12cf refs/heads/master\nremote: ------------\nTo /tmp/git/git-server-hook.git\n ! [remote rejected] main -&gt; main (pre-receive hook declined)\n ! [remote rejected] main -&gt; master (pre-receive hook declined)\nerror: 推送一些引用到 '/tmp/git/git-server-hook.git' 失败</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_update\"><a class=\"anchor\" href=\"#_update\"></a>update</h3>\n<div class=\"paragraph\">\n<p>特点：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>接受三个参数：引用名（分支、标签完整名称），推送前的引用 SHA-1 值，以及用户准备推送的 SHA-1 值</p>\n</li>\n<li>\n<p>会为每一个准备更新的引用各运行一次</p>\n</li>\n<li>\n<p>如果 update 脚本以非零值退出，只有相应的那一个引用会被拒绝，其余的依然会被更新</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>用途：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>钩子阻止对引用进行非快进（non-fast-forward）的更新</p>\n</li>\n<li>\n<p>对该推送所修改的所有引用和文件进行访问控制</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>示例：</p>\n</div>\n<div class=\"paragraph\">\n<p>在裸仓库新建文件 <code>hooks/update</code> ，并为该文件添加可执行权限：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">hooks/update</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">#!/bin/sh\n\n<i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nrefname=\"$1\"\noldrev=\"$2\"\nnewrev=\"$3\"\n\necho \"----------\"\nprintf \"%s %s %s\\n\" $refname $oldrev $newrev\n\nexit 1 <i class=\"conum\" data-value=\"2\"></i><b>(2)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>读取程序三个参数</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>模拟失败情况，会阻止当前引用更新</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>推送两个分支：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ git push origin main:main main:master\n枚举对象中: 3, 完成.\n对象计数中: 100% (3/3), 完成.\n写入对象中: 100% (3/3), 199 字节 | 199.00 KiB/s, 完成.\n总共 3（差异 0），复用 0（差异 0），包复用 0\nremote: ----------\nremote: refs/heads/main 0000000000000000000000000000000000000000 b1f48e4fa15d08018b08052af4c0063d689a12cf\nremote: error: hook declined to update refs/heads/main\nremote: ----------\nremote: refs/heads/master 0000000000000000000000000000000000000000 b1f48e4fa15d08018b08052af4c0063d689a12cf\nremote: error: hook declined to update refs/heads/master\nTo /tmp/git/git-server-hook.git\n ! [remote rejected] main -&gt; main (hook declined)\n ! [remote rejected] main -&gt; master (hook declined)\nerror: 推送一些引用到 '/tmp/git/git-server-hook.git' 失败</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_post_receive\"><a class=\"anchor\" href=\"#_post_receive\"></a>post-receive</h3>\n<div class=\"paragraph\">\n<p>特点：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>无参数调用</p>\n</li>\n<li>\n<p>标准输入传递引用信息</p>\n</li>\n<li>\n<p>在整个过程完结以后运行</p>\n</li>\n<li>\n<p>无法终止推送进程</p>\n</li>\n<li>\n<p>客户端在它结束运行之前将保持连接状态</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>用途：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>更新其他系统服务或者通知用户，如：向 CI 发送构建请求</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>示例：</p>\n</div>\n<div class=\"paragraph\">\n<p>在裸仓库新建文件 <code>hooks/post-receive</code> ，并为该文件添加可执行权限：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">hooks/post-receive</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">#/bin/sh\n\necho \"------------\"\n\n# sha1-old SP sha1-new SP refname LF <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nwhile read oldrev newrev refname\ndo\n    printf \"%-40s %-40s %s\\n\"  $oldrev $newrev $refname\ndone\n\nexit 1 <i class=\"conum\" data-value=\"2\"></i><b>(2)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>从标准输入读取推送引用信息，格式为： <code>sha1-old SP sha1-new SP refname LF</code>，推送多个引用（分支、标签）会有多行。同 <code>pre-receive</code> 格式</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>失败不会对推送产生影响</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>推送两个分支：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-text\" data-lang=\"text\">$ git push origin main:main main:master\n枚举对象中: 3, 完成.\n对象计数中: 100% (3/3), 完成.\n写入对象中: 100% (3/3), 199 字节 | 199.00 KiB/s, 完成.\n总共 3（差异 0），复用 0（差异 0），包复用 0\nremote: ------------\nremote: 0000000000000000000000000000000000000000 b1f48e4fa15d08018b08052af4c0063d689a12cf refs/heads/main\nremote: 0000000000000000000000000000000000000000 b1f48e4fa15d08018b08052af4c0063d689a12cf refs/heads/master\nTo /tmp/git/git-server-hook.git\n * [new branch]      main -&gt; main\n * [new branch]      main -&gt; master</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90\" class=\"bare\">https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Git 服务端 Hooks"},"pageAttributes":{"slug":"git-server-hooks","category":"git"},"revision":{"date":"2020-06-20","number":"1.0"}}},"pageContext":{"id":"9d639142-2631-5826-806e-954881ea88ec","pageAttributes__slug":"git-server-hooks","__params":{"pageAttributes__slug":"git-server-hooks"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}