{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/java-servlet-freemarker-start/","result":{"data":{"asciidoc":{"id":"a7c7d011-43de-5666-b2b2-c07657fbae53","html":"<div class=\"sect1\">\n<h2 id=\"_servlet_使用_freemarker\"><a class=\"anchor\" href=\"#_servlet_使用_freemarker\"></a>Servlet 使用 freemarker</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>OpenJDK 11</p>\n</li>\n<li>\n<p>Gradle</p>\n</li>\n<li>\n<p>Freemarker</p>\n</li>\n</ul>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_依赖\"><a class=\"anchor\" href=\"#_依赖\"></a>依赖</h3>\n<div class=\"paragraph\">\n<p>新建 <code>build.gradle</code> ：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-groovy\" data-lang=\"groovy\">plugins {\n    id 'war'\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'\n    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.31'\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_添加模板\"><a class=\"anchor\" href=\"#_添加模板\"></a>添加模板</h3>\n<div class=\"paragraph\">\n<p>添加 <code>src/main/webapp/template/hello.ftlh</code> ：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ftlh\" data-lang=\"ftlh\">Hello, ${name}!</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>需要禁止直接访问 <code>.*ftlh</code> 文件，可在 <code>web.xml</code> 中配置。</p>\n</li>\n<li>\n<p>新版本(2.3.24+)的 freemarker 文件后缀为 <code>.ftlh</code> ：</p>\n<div class=\"quoteblock\">\n<blockquote>\n<div class=\"paragraph\">\n<p>templates whose source name ends with <code>.ftlh'' gets </code>HTML'' output\nformat, and those with <code>.ftlx'' get </code>XML'' output format.</p>\n</div>\n</blockquote>\n</div>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方法一servlet_forward\"><a class=\"anchor\" href=\"#_方法一servlet_forward\"></a>方法一：servlet forward</h3>\n<div class=\"paragraph\">\n<p>可通过 servlet forward 使用模板，设置 HttpServletRequest 对象属性后，视图的获取 forward 给 FreemarkerServlet。</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>新建文件 <code>src/main/webapp/WEB-INF/web.xml</code> ：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-xml\" data-lang=\"xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" version=\"4.0\"&gt;\n    &lt;servlet&gt;\n        &lt;servlet-name&gt;freemarker&lt;/servlet-name&gt;\n        &lt;servlet-class&gt;freemarker.ext.servlet.FreemarkerServlet&lt;/servlet-class&gt;\n        &lt;init-param&gt;\n            &lt;param-name&gt;TemplatePath&lt;/param-name&gt;\n            &lt;param-value&gt;/template&lt;/param-value&gt;\n        &lt;/init-param&gt;\n    &lt;/servlet&gt;\n\n    &lt;servlet-mapping&gt;\n        &lt;servlet-name&gt;freemarker&lt;/servlet-name&gt;\n        &lt;url-pattern&gt;*.ftlh&lt;/url-pattern&gt;\n    &lt;/servlet-mapping&gt;\n\n    &lt;security-constraint&gt;\n        &lt;web-resource-collection&gt;\n            &lt;web-resource-name&gt;FreeMarker MVC Views&lt;/web-resource-name&gt;\n            &lt;url-pattern&gt;*.ftlh&lt;/url-pattern&gt;\n        &lt;/web-resource-collection&gt;\n        &lt;auth-constraint&gt;\n            &lt;!-- 禁止 Web 直接访问 .ftlh --&gt;\n        &lt;/auth-constraint&gt;\n    &lt;/security-constraint&gt;\n&lt;/web-app&gt;</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>新建文件 <code>src/main/java/example/HelloServlet.java</code> ：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">package example;\n\n@WebServlet(\"/hello\")\npublic class HelloServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp)\n            throws ServletException, IOException {\n        String name = req.getParameter(\"name\");\n        if (name == null) name = \"Java\";\n        req.setAttribute(\"name\", name);\n        req.getRequestDispatcher(\"hello.ftlh\").forward(req, resp);\n    }\n}</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方法二_手动读取模板\"><a class=\"anchor\" href=\"#_方法二_手动读取模板\"></a>方法二： 手动读取模板</h3>\n<div class=\"paragraph\">\n<p>可以手动读取模板并使用，和非 Servlet 环境类似。</p>\n</div>\n<div class=\"paragraph\">\n<p>新建 <code>src/main/java/example/HelloServlet2.java</code> ：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">package example;\n\n@WebServlet(\"/hello2\")\npublic class HelloServlet2 extends HttpServlet {\n    private Configuration cfg;\n\n    @Override\n    public void init() throws ServletException {\n        cfg = new Configuration(Configuration.VERSION_2_3_31);\n        cfg.setServletContextForTemplateLoading(getServletContext(), \"template\");\n    }\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String name = req.getParameter(\"name\");\n        if (name == null) name = \"Java\";\n        HashMap&lt;String, String&gt; model = new HashMap&lt;&gt;();\n        model.put(\"name\", name);\n\n        Template template = cfg.getTemplate(\"hello.ftlh\");\n        try {\n            template.process(model, resp.getWriter());\n        } catch (TemplateException e) {\n            throw new ServletException(e);\n        }\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>模板根目录有多种设置方法，servlet 中可使用 <code>setServletContextForTemplateLoading</code> 。</p>\n</li>\n<li>\n<p>需要注意线程安全问题， <code>getTemplate</code> 方法是线程安全的。</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h3>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://www.viralpatel.net/freemarker-servlet-tutorial-example/\">FreeMarker Servlet Tutorial with Example</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/acmman/article/details/79248718\">freemarker 结合Servlet使用</a></p>\n</li>\n<li>\n<p><a href=\"https://freemarker.apache.org/docs/pgui%5Fconfig%5Foutputformatsautoesc.html\">Associating output formats with templates</a></p>\n</li>\n<li>\n<p><a href=\"https://freemarker.apache.org/docs/pgui%5Fmisc%5Fservlet.html\">Using FreeMarker with servlets</a></p>\n</li>\n<li>\n<p><a href=\"https://freemarker.apache.org/docs/pgui%5Fmisc%5Fmultithreading.html\">Multithreading</a></p>\n</li>\n<li>\n<p><a href=\"http://www.freemarker.net/\">FreeMarker 简介</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>","document":{"title":"Servlet 中使用 Freemarker"},"pageAttributes":{"slug":"java-servlet-freemarker-start","category":"java"},"revision":{"date":"2021-02-27","number":"1.0"}}},"pageContext":{"id":"a7c7d011-43de-5666-b2b2-c07657fbae53","pageAttributes__slug":"java-servlet-freemarker-start","__params":{"pageAttributes__slug":"java-servlet-freemarker-start"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}