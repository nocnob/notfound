{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/ruby-sidekiq/","result":{"data":{"asciidoc":{"id":"5584b894-1a05-56a6-9eb1-c317e3fb2f75","html":"<div class=\"sect1\">\n<h2 id=\"_基本使用\">基本使用</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Ubuntu 安装最新版 Redis https://launchpad.net/~redislabs/+archive/ubuntu/redis\nsudo apt install redis-server\n\n# 创建 ruby 项目\nbundle init\nbundle config set --local path 'vendor/bundle'\nbundle add sidekiq</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>消费者代码：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">por.rb</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-ruby\" data-lang=\"ruby\">require \"sidekiq\"\n\nclass PlainOldRuby\n  include Sidekiq::Job\n\n  def perform(how_hard = \"super hard\", how_long = 1)\n    sleep how_long\n    puts \"Workin' #{how_hard}\"\n  end\nend</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>启动消费者：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">bundle exec bin/sidekiq -r ./por.rb</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>默认使用本地 redis <code>redis://localhost:6379</code></p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>启动生产者：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">bundle exec irb -r ./por.rb\nPlainOldRuby.perform_async \"like a dog\", 3</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_说明\">说明</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"title\">Sidekiq 时序图</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\n-&gt; \"CLI\" : run\n\"CLI\" -&gt; \"Launcher\" : run\n\"Launcher\" -&gt; \"Scheduled::Poller\" : start\n\"Launcher\" -&gt; \"Manager\" : start\n\"Manager\" -&gt; \"Processor\" : start\n\"Processor\" -&gt; \"Thread\" : new\n\"Thread\" -&gt; \"Processor\" : run\n\"Processor\" -&gt; \"Processor\" : process_one\\n(fetch, process)\n\"Processor\" -&gt; \"Processor\" : process_one\\n(fetch, process)\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_sidekiqscheduledpoller\">Sidekiq::Scheduled::Poller</h3>\n<div class=\"paragraph\">\n<p>Poller 每 N 秒检查一次 Redis，以确定重试或计划集的作业是否超过其时间戳，以及是否应加入队列。如果满足条件，它会将作业弹出并添加到其原始队列中，这样 workers 就可以像其他作业一样获取它。</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_sidekiqprocessor\">Sidekiq::Processor</h3>\n<div class=\"paragraph\">\n<p>Processor 是一个独立的线程，负责执行：</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>从 redis 获取一个作业</p>\n</li>\n<li>\n<p>执行作业</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>实例化作业类</p>\n</li>\n<li>\n<p>执行中间件链</p>\n</li>\n<li>\n<p>调用 <code>#perform</code></p>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>Processor 可能因进程停止或作业执行过程中的出现错误而退出。如果作业执行过程中发生错误，Processor 将调用 Manager 创建一个新的 Processor 来替换它自己并退出。</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://draveness.me/sidekiq/\" class=\"bare\">https://draveness.me/sidekiq/</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/mperham/sidekiq/blob/main/examples/por.rb\" class=\"bare\">https://github.com/mperham/sidekiq/blob/main/examples/por.rb</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Ruby sidekiq"},"pageAttributes":{"slug":"ruby-sidekiq","category":"ruby"},"revision":{"date":"2023-01-06","number":"1.0"}}},"pageContext":{"id":"5584b894-1a05-56a6-9eb1-c317e3fb2f75","pageAttributes__slug":"ruby-sidekiq","__params":{"pageAttributes__slug":"ruby-sidekiq"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}