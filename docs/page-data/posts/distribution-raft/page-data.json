{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/distribution-raft/","result":{"data":{"asciidoc":{"id":"2e27d5be-2e99-5041-b2c4-77e5e972d706","html":"<div class=\"sect1\">\n<h2 id=\"_领导者选举\">领导者选举</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>服务器在三种状态间转换：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\n[*] -&gt; Follower\nFollower -&gt; Candidate: 心跳超时\\n开始选举\nFollower &lt;- Candidate: 收到来自领导者的 RPC\nCandidate -&gt; Leader: 投票过半\\n赢得选举\nLeader -&gt; Follower: 更大任期请求\nLeader -&gt; [*]\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>系统正常运行时，只有一个领导者，其余都是追随者。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_正常情况\">正常情况</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nparticipant C as c\nparticipant S1 as s1\nparticipant S2 as s2\nparticipant S3 as s3\n\ns1 -&gt; s1 : wait timeout(1)\nactivate s1\nnote right s1\n    &lt;font color=red&gt;state=Candidate\n    &lt;font color=red&gt;currentTerm=1\n    &lt;font color=red&gt;votedFor=1\nend note\n\ns1 -&gt; s2 : RequestVote(Term=1, CandidateID=1)\nactivate s2\nnote right s2\n    state=Follower\n    &lt;font color=red&gt;currentTerm=1\n    &lt;font color=red&gt;votedFor=1\nend note\n\ns1 -&gt; s3 : RequestVote(Term=1, CandidateID=1)\nactivate s3\nnote right s3\n    state=Follower\n    &lt;font color=red&gt;currentTerm=1\n    &lt;font color=red&gt;votedFor=1\nend note\n\ns1 &lt;-- s2: (Term=1, VoteGranted=true)\ndeactivate s2\n\nnote right s1\n    &lt;font color=red&gt;state=Leader\n    &lt;font color=red&gt;currentTerm=1\n    &lt;font color=red&gt;votedFor=1\nend note\ns1 &lt;-- s3: (Term=1, VoteGranted=true)\ndeactivate s3\n\ns1 -&gt; s2 : AppendEntries()\nactivate s2\ns1 -&gt; s3 : AppendEntries()\nactivate s3\ns1 &lt;-- s2\ndeactivate s2\ns1 &lt;-- s3\ndeactivate s3\ndeactivate s1\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>追随状态节点 S1 未收到任期更大的 RPC 请求，认为集群中没有领导者，进入候选状态；</p>\n</li>\n<li>\n<p>S1 节点开始竞选；</p>\n</li>\n<li>\n<p>S1 获得超过半数投票，成为领导者；</p>\n</li>\n<li>\n<p>领导者 S1 周期性的发送心跳包，保持领导者的权威。</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_追随者网络分区\">追随者网络分区</h3>\n<div class=\"paragraph\">\n<p>追随者网络波动未及时收到领导者的心跳，会发起新一轮投票。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nparticipant C as c\nparticipant S1 as s1\nparticipant S2 as s2\nparticipant S3 as s3\n\nactivate s1\nnote right s1\n    state=Leader\n    currentTerm=1\n    votedFor=1\nend note\ns1 -&gt; s2 : AppendEntries()\nactivate s2\nnote right s2\n    state=Follower\n    currentTerm=1\n    votedFor=1\nend note\ns1 -x s3 : AppendEntries()\nnote right s3\n    state=Follower\n    currentTerm=1\n    votedFor=1\nend note\ns1 &lt;-- s2\ndeactivate s2\ndeactivate s1\n\ns3 -&gt; s3 : wait timeout(1)\nactivate s3\nnote right s3\n    &lt;font color=red&gt;state=Candidate\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=2\nend note\n\ns3 -&gt; s2 : RequestVote(Term=2, CandidateID=3)\nactivate s2\nnote right s2\n    state=Follower\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=2\nend note\ns3 -x s1 : RequestVote(Term=2, CandidateID=3)\ns3 &lt;-- s2\ndeactivate s2\nnote right s3\n    &lt;font color=red&gt;state=Leader\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=2\nend note\n\ns3 -&gt; s2 : AppendEntries()\nactivate s2\ns3 -&gt; s1 : AppendEntries()\nactivate s1\nnote right s1\n    &lt;font color=red&gt;state=Follower\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=2\nend note\ns3 &lt;-- s2\ndeactivate s2\ns3 &lt;-- s1\ndeactivate s1\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>由于网络波动 S3 未收到 S1 的心跳包；</p>\n</li>\n<li>\n<p>S3 等待心跳超时，于是 S3 发起新一轮的投票。但此时 S1 并未故障且为领导者；</p>\n</li>\n<li>\n<p>S2 和 S3 投票通过，S3 被当选为新的领导者。 S1 由于网络故障，未收到 S1 发送的投票请求，状态依旧为领导者；</p>\n</li>\n<li>\n<p>S1 收到 S3 发送的心跳，S1 被迫下台，修改状态为追随者。</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>极端情况，假设 S1 只能发送消息，无法接收消息和响应：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nparticipant C as c\nparticipant S1 as s1\nparticipant S2 as s2\nparticipant S3 as s3\n\nactivate s1\nnote right s1\n    state=Leader\n    currentTerm=1\n    votedFor=1\nend note\ns1 -&gt; s2 : AppendEntries()\nactivate s2\nnote right s2\n    state=Follower\n    currentTerm=1\n    votedFor=1\nend note\ns1 -x s3 : AppendEntries()\nnote right s3\n    state=Follower\n    currentTerm=1\n    votedFor=1\nend note\ns1 &lt;-- s2\ndeactivate s2\ndeactivate s1\n\ns3 -&gt; s3 : wait timeout(1)\nactivate s3\nnote right s3\n    &lt;font color=red&gt;state=Candidate\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=3\nend note\n\ns3 -&gt; s2 : RequestVote(Term=2, CandidateID=3)\nactivate s2\nnote right s2\n    state=Follower\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=3\nend note\ns3 -&gt; s1 : RequestVote(Term=2, CandidateID=3)\nactivate s1\nnote right s1\n    &lt;font color=red&gt;state=Follower\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=3\nend note\ns3 x-- s2\ndeactivate s2\ns3 x-- s1\ndeactivate s1\n@enduml\n\ns1 -&gt; s1: timeout(1)\nactivate s1\nnote right s1\n    &lt;font color=red&gt;state=Candidate\n    &lt;font color=red&gt;currentTerm=3\n    &lt;font color=red&gt;votedFor=1\nend note\ns1 -&gt; s2 : RequestVote(Term=3, CandidateID=1)\nactivate s2\nnote right s2\n    state=Follower\n    &lt;font color=red&gt;currentTerm=3\n    &lt;font color=red&gt;votedFor=1\nend note\ns1 -x s3 : RequestVote(Term=3, CandidateID=1)\ns1 &lt;-- s2\ndeactivate s2\nnote right s1\n    &lt;font color=red&gt;state=Leader\n    currentTerm=3\n    votedFor=1\nend note\ndeactivate s1</code></pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>S1 为领导者，S2、S3 为追随者；</p>\n</li>\n<li>\n<p>S3 无法收到领导者 S1 发送的心跳，于是发起新一轮的投票；</p>\n</li>\n<li>\n<p>S3 竞选领导导致 S1 下台，但 S3 没有收到响应，无法得知自己的发起的投票已经通过，因此不会向其他节点发送心跳；</p>\n</li>\n<li>\n<p>S1 等待心跳超时，发起新一轮的投票并成功当选领导；</p>\n</li>\n<li>\n<p>再次进入步骤 2</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_领导者网络分区\">领导者网络分区</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nparticipant C as c\nparticipant S1 as s1\nparticipant S2 as s2\nparticipant S3 as s3\n\nactivate s1\nnote right s1\n    state=Leader\n    currentTerm=1\n    votedFor=1\nend note\ns1 -x s2 : AppendEntries()\nnote right s2\n    state=Follower\n    currentTerm=1\n    votedFor=1\nend note\ns1 -x s3 : AppendEntries()\nnote right s3\n    state=Follower\n    currentTerm=1\n    votedFor=1\nend note\ndeactivate s1\n\ns3 -&gt; s3 : wait timeout(1)\nactivate s3\nnote right s3\n    &lt;font color=red&gt;state=Candidate\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=3\nend note\n\ns3 -&gt; s2 : RequestVote(Term=2, CandidateID=3)\nactivate s2\nnote right s2\n    state=Follower\n    &lt;font color=red&gt;currentTerm=2\n    &lt;font color=red&gt;votedFor=3\nend note\ns3 -x s1 : RequestVote(Term=2, CandidateID=3)\ns3 &lt;-- s2\ndeactivate s2\nnote right s3\n    &lt;font color=red&gt;state=Leader\n    currentTerm=2\n    votedFor=3\nend note\ns3 -&gt; s2 : AppendEntries()\nactivate s2\ns3 -x s1 : AppendEntries()\ns3 &lt;-- s2\ndeactivate s2\ndeactivate s3\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>领导者 S1 由于网络分区无法发送和接收消息；</p>\n</li>\n<li>\n<p>追随者 S3 等待心跳超时，发起新一轮的选举；</p>\n</li>\n<li>\n<p>S3 获得自己和 S2 的投票，成为领导者；</p>\n</li>\n<li>\n<p>S3 向 S2 和 S1 发送心跳；</p>\n</li>\n<li>\n<p>如果 S1 收到 S3 等心跳，则会修改自身状态为追随者。</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_日志复制\">日志复制</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>日志条目包括：</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>索引：日志条目在整个日志中的位置</p>\n</li>\n<li>\n<p>任期号：日志条目首次被领导者创建的任期</p>\n</li>\n<li>\n<p>命令：应用于状态机的命令</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>Raft 算法通过索引和任期号唯一标识一条日志记录，日志必须连续的提交，不允许出现日志空洞。</p>\n</div>\n<div class=\"paragraph\">\n<p>如果一条日志条目存储在超过半数的节点上，则认为该记录已提交，该条目不能再改变。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_正常情况_2\">正常情况</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nparticipant C as c\nparticipant S1 as s1\nparticipant S2 as s2\nparticipant S3 as s3\n\nactivate c\nc -&gt; s1 : send(a)\nactivate s1\nnote right s1\n    state=Leader\n    currentTerm=1\n    CommitIndex=0\nend note\ns1 -&gt; s1 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=0, PrevLogTerm=0, Entries=[], LeaderCommit=0)\n\ns1 -&gt; s2 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=0, PrevLogTerm=0, Entries=[], LeaderCommit=0)\nnote right s2\n    state=Follower\n    currentTerm=1\n    CommitIndex=0\n    &lt;font color=red&gt;log[1]=a\nend note\nactivate s2\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=0, PrevLogTerm=0, Entries=[], LeaderCommit=0)\nactivate s3\nnote right s3\n    state=Follower\n    currentTerm=1\n    CommitIndex=0\n    &lt;font color=red&gt;log[1]=a\nend note\ns1 &lt;-- s2 : (Term=1, Success=true)\ndeactivate s2\n\nnote right s1\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=1\nend note\nc &lt;-- s1\ns1 &lt;-- s3 : (Term=1, Success=true)\ndeactivate s3\ndeactivate s1\n\nc -&gt; s1 : send(b)\nactivate s1\ns1 -&gt; s1 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=1, PrevLogTerm=1, Entries=[], LeaderCommit=1)\ns1 -&gt; s2 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=1, PrevLogTerm=1, Entries=[], LeaderCommit=1)\nactivate s2\nnote right s2\n    state=Follower\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=1\nend note\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=1, PrevLogTerm=1, Entries=[], LeaderCommit=1)\nactivate s3\nnote right s3\n    state=Follower\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=1\nend note\ns1 &lt;-- s2 : (Term=1, Success=true)\ndeactivate s2\nnote right s1\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=2\nend note\nc &lt;-- s1\ns1 &lt;-- s3 : (Term=1, Success=true)\ndeactivate s3\ndeactivate s1\n\nc -&gt; s1 : send(c)\nactivate s1\ns1 -&gt; s1 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=2, PrevLogTerm=1, Entities=[], LeaderCommit=2)\ns1 -&gt; s2 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=2, PrevLogTerm=1, Entities=[], LeaderCommit=2)\nactivate s2\nnote right s2\n    state=Follower\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=2\nend note\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=2, PrevLogTerm=1, Entities=[], LeaderCommit=2)\nactivate s3\nnote right s3\n    state=Follower\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=2\nend note\ns1 &lt;-- s2 : (Term=1, Success=true)\ndeactivate s2\nnote right s1\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=3\nend note\ns1 &lt;-- s3 : (Term=1, Success=true)\ndeactivate s3\nc &lt;-- s1\ndeactivate s1\ndeactivate c\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>客户端向领导者发送命令；</p>\n</li>\n<li>\n<p>领导者先将命令追加到自己的日志中，确保日志持久化存储；</p>\n</li>\n<li>\n<p>领导者并行的向其他节点发送 <code>AppendEntries</code> 消息，等待响应；</p>\n</li>\n<li>\n<p>如果超过半数节点响应，则认为新的日志记录已提交，接着领导者将命令应用到自己的状态机，然后向客户端返回响应；</p>\n</li>\n<li>\n<p>后续的 <code>AppendEntries</code> 消息通过 <code>LeaderCommit</code> 参数通知追随者，追随者也将提交日志索引小于 <code>LeaderCommit</code> 的日志，并将日志的命令应用到自己的状态机。</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><code>AppendEntries</code> 中包含前一个日志条目(<code>PrevLogIndex</code>)和任期(<code>PrevLogTerm</code>)，追随者会检查自己最后一条日志的索引和任期号是否匹配，不匹配时拒绝。</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_追随者消息乱序到达\">追随者消息乱序到达</h3>\n<div class=\"paragraph\">\n<p>领导者向追随者先发送的消息后到达，和追随者网络分区类似。</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_追随者网络分区_2\">追随者网络分区</h3>\n<div class=\"paragraph\">\n<p>追随者出现网络分区后恢复，需要补齐缺失的日志。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\nparticipant C as c\nparticipant S1 as s1\nparticipant S2 as s2\nparticipant S3 as s3\n\nc -&gt; s1 : send(d)\nactivate s1\ns1 -&gt; s1 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=3, PrevLogTerm=1, Entries=[], LeaderCommit=3)\ns1 -&gt; s2 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=3, PrevLogTerm=1, Entries=[], LeaderCommit=3)\nactivate s2\nnote right s2\n    state=Follower\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=3\nend note\ns1 -x s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=3, PrevLogTerm=1, Entries=[], LeaderCommit=3)\ns1 &lt;-- s2 : (Term=1, Success=true)\ndeactivate s2\nc &lt;-- s1\ndeactivate s1\nnote right s1\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=4\nend note\n\nc -&gt; s1 : send(e)\nactivate s1\ns1 -&gt; s1 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=4, PrevLogTerm=1, Entries=[], LeaderCommit=4)\ns1 -&gt; s2 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=4, PrevLogTerm=1, Entries=[], LeaderCommit=4)\nactivate s2\nnote right s2\n    state=Follower\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=4\nend note\ns1 -x s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=4, PrevLogTerm=1, Entries=[], LeaderCommit=4)\ns1 &lt;-- s2 : (Term=1, Success=true)\ndeactivate s2\nc &lt;-- s1\ndeactivate s1\nnote right s1\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=5\nend note\n\nc -&gt; s1 : send(f)\nactivate s1\ns1 -&gt; s1 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=5, PrevLogTerm=1, Entries=[], LeaderCommit=5)\ns1 -&gt; s2 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=5, PrevLogTerm=1, Entries=[], LeaderCommit=5)\nactivate s2\nnote right s2\n    state=Follower\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=5\nend note\ns1 &lt;-- s2 : (Term=1, Success=true)\ndeactivate s2\nnote right s1\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=6\nend note\nc &lt;-- s1\n\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=5, PrevLogTerm=1, Entries=[], LeaderCommit=6)\nactivate s3\ns1 &lt;-- s3 : (Term=1, Success=false)\ndeactivate s3\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=4, PrevLogTerm=1, Entries=[], LeaderCommit=6)\nactivate s3\ns1 &lt;-- s3 : (Term=1, Success=false)\ndeactivate s3\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=3, PrevLogTerm=1, Entries=[], LeaderCommit=6)\nactivate s3\nnote right s3\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=4\nend note\ns1 &lt;-- s3 : (Term=1, Success=true)\ndeactivate s3\n\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=4, PrevLogTerm=1, Entries=[], LeaderCommit=6)\nactivate s3\nnote right s3\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;CommitIndex=5\nend note\ns1 &lt;-- s3 : (Term=1, Success=true)\ndeactivate s3\n\ns1 -&gt; s3 : AppendEntries(Term=1, LeaderID=1, PrevLogIndex=5, PrevLogTerm=1, Entries=[], LeaderCommit=6)\nactivate s3\nnote right s3\n    state=Leader\n    currentTerm=1\n    &lt;font color=red&gt;LeaderCommit=6\nend note\ns1 &lt;-- s3 : (Term=1, Success=true)\ndeactivate s3\n\ndeactivate s1\n@enduml</code></pre>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>追随者 S3 由于网络分区无法接收到领导者的消息；</p>\n</li>\n<li>\n<p>追随者 S3 网络恢复后收到了领导者 S1 的请求，但上一条日志索引检测失败，拒绝了领导者 S1 的请求；</p>\n</li>\n<li>\n<p>领导者 S1 减小索引并重试；</p>\n</li>\n<li>\n<p>领导者 S1 重试成功后，增加索引补全缺失的日志。</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_领导者网络分区_2\">领导者网络分区</h3>\n<div class=\"paragraph\">\n<p>领导者网络故障，与追随者网络不通，无法发送或者接收消息，但和客户端相通：领导者接收到的请求无法提交，追随者之间会发起新一轮的选举。</p>\n</div>\n<div class=\"paragraph\">\n<p>极端情况，假设领导者只能向追随者发送消息，无法接收来自追随者的消息和响应：消息会被同步，但无法提交。</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\">参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://book.douban.com/subject/35794814/\">《深入理解分布式系统》</a></p>\n</li>\n<li>\n<p><a href=\"https://raft.github.io/\" class=\"bare\">https://raft.github.io/</a></p>\n</li>\n<li>\n<p><a href=\"https://zhuanlan.zhihu.com/p/32052223\" class=\"bare\">https://zhuanlan.zhihu.com/p/32052223</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Raft 基本流程(草稿)"},"pageAttributes":{"slug":"distribution-raft","category":"distribution"},"revision":{"date":"2023-02-07","number":"1.0"}}},"pageContext":{"id":"2e27d5be-2e99-5041-b2c4-77e5e972d706","pageAttributes__slug":"distribution-raft","__params":{"pageAttributes__slug":"distribution-raft"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}