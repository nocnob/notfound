{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/spring-mail/","result":{"data":{"asciidoc":{"id":"10e5b321-082e-5c34-b81f-fd730c616ec6","html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p>spring boot 2.6.1</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_依赖\"><a class=\"anchor\" href=\"#_依赖\"></a>依赖</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-gradle\" data-lang=\"gradle\">implementation 'org.springframework.boot:spring-boot-starter-freemarker'\nimplementation 'org.springframework.boot:spring-boot-starter-mail'</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_配置\"><a class=\"anchor\" href=\"#_配置\"></a>配置</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>使用本地测试邮件服务器 <a href=\"https://mailcatcher.me/\">mailcatcher</a></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-yml\" data-lang=\"yml\">spring:\n  mail:\n    host: 127.0.0.1\n    port: 1025\n    protocol: smtp</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_代码\"><a class=\"anchor\" href=\"#_代码\"></a>代码</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_纯文本\"><a class=\"anchor\" href=\"#_纯文本\"></a>纯文本</h3>\n<div class=\"paragraph\">\n<p><code>SimpleMailMessage</code> 用来发送纯文本：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Autowired\nprivate MailSender mailSender;\n\npublic void send() {\n    SimpleMailMessage msg = new SimpleMailMessage();\n    msg.setSubject(\"simple\");\n    msg.setFrom(\"noreply@notfound.cn\");\n    msg.setTo(\"test@notfound.cn\");\n    msg.setText(\"&lt;h1&gt;Hello Spring Mail!&lt;/h1&gt;\");\n\n    try {\n        mailSender.send(msg);\n    } catch (MailException e) {\n        System.err.println(e.getMessage());\n    }\n}</code></pre>\n</div>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><code>mailSender</code> 为 <code>JavaMailSenderImpl</code> 类型,该对象初始化时会从文件中读取邮件服务器相关信息</p>\n</li>\n<li>\n<p>只能发送纯文本信息，html 标签并不会被解析</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_html\"><a class=\"anchor\" href=\"#_html\"></a>HTML</h3>\n<div class=\"paragraph\">\n<p>通过 <code>JavaMailSender</code> 创建 MimeMessage 对象，之后可以添加 html 标签：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Autowired\nprivate JavaMailSender mailSender;\n\npublic void send() throws MessagingException {\n    MimeMessage message = mailSender.createMimeMessage();\n    message.setSubject(\"java mail sender\");\n    message.setFrom(\"noreply@notfound.cn\");\n    message.setRecipient(Message.RecipientType.TO, new InternetAddress(\"test@notfound.cn\"));\n    message.setText(\"&lt;h1&gt;Hello Spring Mail&lt;/h1&gt;\", StandardCharsets.UTF_8.name(), \"html\");\n\n    mailSender.send(message);\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_附件\"><a class=\"anchor\" href=\"#_附件\"></a>附件</h3>\n<div class=\"paragraph\">\n<p>通过 <code>MimeMessageHelper</code> 可以简化操作 mime message 操作流程：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Autowired\nprivate JavaMailSender mailSender;\n\npublic void send() throws MessagingException {\n    MimeMessage message = mailSender.createMimeMessage();\n\n    MimeMessageHelper helper = new MimeMessageHelper(message, true);\n    helper.setSubject(\"helper\");\n    helper.setFrom(\"noreply@notfound.cn\");\n    helper.setTo(\"test@notfound.cn\");\n\n    // 附件\n    helper.addAttachment(\"test.png\", new ClassPathResource(\"test.png\"));\n\n    // HTML + 图片\n    helper.setText(\"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Hello Spring Mail&lt;/h1&gt;&lt;img src='cid:identifier1234'/&gt;&lt;/body&gt;&lt;html&gt;\", true);\n    helper.addInline(\"identifier1234\", new ClassPathResource(\"test.png\"));\n\n    mailSender.send(message);\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_使用_freemarker\"><a class=\"anchor\" href=\"#_使用_freemarker\"></a>使用 freemarker</h3>\n<div class=\"paragraph\">\n<p>使用 Freemarker 处理邮件模板：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">@Autowired\nprivate JavaMailSender mailSender;\n@Autowired\nprivate Configuration configuration;\n\npublic void send() throws MessagingException, IOException, TemplateException {\n    String to = \"test@example.com\";\n\n    Map&lt;String, Object&gt; model = new HashMap&lt;&gt;();\n    model.put(\"email\", to);\n\n    StringWriter stringWriter = new StringWriter();\n    configuration.getTemplate(\"email.ftlh\").process(model, stringWriter);\n\n    MimeMessage message = mailSender.createMimeMessage();\n\n    MimeMessageHelper helper = new MimeMessageHelper(message, true);\n    helper.setSubject(\"helper\");\n    helper.setFrom(\"noreply@notfound.cn\");\n    helper.setTo(to);\n    helper.setText(stringWriter.getBuffer().toString(), true);\n    helper.addInline(\"identifier1234\", new ClassPathResource(\"test.png\"));\n\n    mailSender.send(message);\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>模板 <code>email.ftlh</code> 内容：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-html\" data-lang=\"html\">&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Welcome!&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome ${email}!&lt;/h1&gt;\n&lt;img src=\"cid:identifier1234\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://docs.spring.io/spring-framework/docs/5.3.13/reference/html/integration.html#mail\" class=\"bare\">https://docs.spring.io/spring-framework/docs/5.3.13/reference/html/integration.html#mail</a></p>\n</li>\n<li>\n<p><a href=\"https://springhow.com/spring-boot-email-freemarker/\" class=\"bare\">https://springhow.com/spring-boot-email-freemarker/</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"Spring Mail"},"pageAttributes":{"slug":"spring-mail","category":"spring"},"revision":{"date":"2021-12-10","number":"1.0"}}},"pageContext":{"id":"10e5b321-082e-5c34-b81f-fd730c616ec6","pageAttributes__slug":"spring-mail","__params":{"pageAttributes__slug":"spring-mail"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}