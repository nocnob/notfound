{"componentChunkName":"component---src-pages-posts-asciidoc-page-attributes-slug-tsx","path":"/posts/javascript-promise/","result":{"data":{"asciidoc":{"id":"eab29939-55f9-5575-812a-2ea36fa6ed1b","html":"<div class=\"sect1\">\n<h2 id=\"_promise\"><a class=\"anchor\" href=\"#_promise\"></a>Promise</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Promise 是 ES6 中推出的引用类型，用来支持定义和组织异步逻辑。</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_resolve\"><a class=\"anchor\" href=\"#_resolve\"></a>Resolve</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\"><i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\nlet a = new Promise((resolve, reject) =&gt; {\n  console.log(\"a\");\n  resolve(); <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\n});\n\nlet b = a.then(() =&gt; console.log(\"b\")); <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\nlet c = a.then(() =&gt; console.log(\"c\"));\n\nb.then(() =&gt; console.log(\"d\"));\nb.then(() =&gt; console.log(\"e\"));\n\nc.then(() =&gt; console.log(\"f\"));\nc.then(() =&gt; console.log(\"g\"));\n// 输出 a b c d e f g</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>创建 Promise 对象，传入执行器函数作为参数</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>调用 <code>resolve</code> 将 Primise 状态设置为解决</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>链式调用 <code>then</code> 产生新的 Promise 对象。<code>then</code> 可提供两个可选的参数： <code>onResolved</code> 和 <code>onRejected</code></td>\n</tr>\n</table>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\n(a) --&gt; (b)\n(a) --&gt; (c)\n\n(b) --&gt; (d)\n(b) --&gt; (e)\n\n(c) --&gt; (f)\n(c) --&gt; (g)\n\nnote right of a: resolved\nnote right of b: resolved\nnote right of d: resolved\n@enduml</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_reject_立刻_catch\"><a class=\"anchor\" href=\"#_reject_立刻_catch\"></a>Reject 立刻 catch</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\">let a = new Promise((resolve, reject) =&gt; {\n  console.log(\"a\");\n  reject(); <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n});\n\nlet b = a.catch(() =&gt; console.log(\"b\")); <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\nlet c = a.catch(() =&gt; console.log(\"c\"));\n\nb.then(() =&gt; console.log(\"d\")); <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\nb.then(() =&gt; console.log(\"e\"));\n\nc.then(() =&gt; console.log(\"f\"));\nc.then(() =&gt; console.log(\"g\"));\n// 输出 a b c d e f g</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>调用 <code>reject</code> 将 Primise 状态设置为拒绝</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>链式调用 <code>catch</code> 处理拒绝的情况，同样产生新的 Promise 对象。是一个语法糖，相当于 <code>then(null, onRejected)</code></td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>由 <code>catch</code> 处理了拒绝情况，之后的 Promise 进入到解决状态</td>\n</tr>\n</table>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\n(a) --&gt; (b)\n(a) --&gt; (c)\n\n(b) --&gt; (d)\n(b) --&gt; (e)\n\n(c) --&gt; (f)\n(c) --&gt; (g)\n\nnote right of a: rejected\nnote right of b: resolved\nnote right of d: resolved\n@enduml</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_reject_末端_catch\"><a class=\"anchor\" href=\"#_reject_末端_catch\"></a>Reject 末端 catch</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\">let a = new Promise((resolve, reject) =&gt; {\n  console.log(\"a\");\n  reject(); <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n});\n\nlet b = a.then(() =&gt; console.log(\"b\")); <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\nlet c = a.then(() =&gt; console.log(\"c\"));\n\nb.catch(() =&gt; console.log(\"d\")); <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\nb.catch(() =&gt; console.log(\"e\"));\n\nc.catch(() =&gt; console.log(\"f\"));\nc.catch(() =&gt; console.log(\"g\"));\n// 输出 a d e f g</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>调用 <code>reject</code> 将 Primise 状态设置为拒绝</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>未提供 <code>onRejected</code> 方法，无法处理，直接原样返回</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td>通过 <code>catch</code> 处理拒绝状态</td>\n</tr>\n</table>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\n(a) --&gt; (b)\n(a) --&gt; (c)\n\n(b) --&gt; (d)\n(b) --&gt; (e)\n\n(c) --&gt; (f)\n(c) --&gt; (g)\n\nnote right of a : rejected\nnote right of b : rejected\nnote right of d : resolved\n@enduml</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_reject_由异常产生\"><a class=\"anchor\" href=\"#_reject_由异常产生\"></a>Reject 由异常产生</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\">let a = new Promise((resolve, reject) =&gt; {\n  console.log(\"a\");\n  resolve(); <i class=\"conum\" data-value=\"1\"></i><b>(1)</b>\n});\n\nlet b = a.then(() =&gt; { throw new Error(\"b\"); }); <i class=\"conum\" data-value=\"2\"></i><b>(2)</b>\nlet c = a.then(() =&gt; console.log(\"c\"));\n\nb.catch(() =&gt; console.log(\"d\")); <i class=\"conum\" data-value=\"3\"></i><b>(3)</b>\nb.catch(() =&gt; console.log(\"e\"));\n\nc.then(() =&gt; console.log(\"f\"));\nc.then(() =&gt; console.log(\"g\"));\n// 输出 a c d e f g</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<table>\n<tr>\n<td><i class=\"conum\" data-value=\"1\"></i><b>1</b></td>\n<td>设置状态为解决</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"2\"></i><b>2</b></td>\n<td>产生异常，状态被设置为拒绝</td>\n</tr>\n<tr>\n<td><i class=\"conum\" data-value=\"3\"></i><b>3</b></td>\n<td><code>catch</code> 处理拒绝状态</td>\n</tr>\n</table>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-plantuml\" data-lang=\"plantuml\">@startuml\n(a) --&gt; (b)\n(a) --&gt; (c)\n\n(b) --&gt; (d)\n(b) --&gt; (e)\n\n(c) --&gt; (f)\n(c) --&gt; (g)\n\nnote right of a : resolved\nnote right of b : rejected\nnote right of d : resolved\n@enduml</code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_参考\"><a class=\"anchor\" href=\"#_参考\"></a>参考</h2>\n<div class=\"sectionbody\">\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"https://book.douban.com/subject/35175321/\">《JavaScript 高级程序设计（第4版）》</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\" class=\"bare\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","document":{"title":"JavaScript Promise 基本使用"},"pageAttributes":{"slug":"javascript-promise","category":"front-end"},"revision":{"date":"2022-06-26","number":"1.0"}}},"pageContext":{"id":"eab29939-55f9-5575-812a-2ea36fa6ed1b","pageAttributes__slug":"javascript-promise","__params":{"pageAttributes__slug":"javascript-promise"}}},"staticQueryHashes":["3143286284"],"slicesMap":{}}