{"version":3,"file":"component---src-pages-index-tsx-1aa763e192426580529b.js","mappings":"iKACW,EAAS,+BAITA,EAAW,iCC2DtB,MA5DgBC,IACd,MAAOC,EAAQC,GAAaC,EAAAA,UAAwB,GAE9CC,GAAOC,EAAAA,EAAAA,gBAAe,cAgB5B,OACEF,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CAAQG,UDtBM,gCCuBZH,EAAAA,cAAAA,MAAAA,CAAKG,UDnBI,6BCoBPH,EAAAA,cAAAA,MAAAA,CAAKG,UDnBQ,mCCoBXH,EAAAA,cAAAA,SAAAA,CACEG,UAAcC,8BAAcN,EAASM,EAAgB,IACrDC,QAZI,KACdN,GAAWD,GACXQ,QAAQC,IAAIT,EAAO,GAYTE,EAAAA,cAAAA,IAAAA,CACEG,UAAU,aACV,cAAY,OACZK,MAAO,CAAEC,MAAO,YAGpBT,EAAAA,cAAAA,MAAAA,CAAKG,UD7BE,+BC8BLH,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,KAAG,IAAGV,EAAKW,KAAKC,aAAaC,MAAK,OAG/Cd,EAAAA,cAAAA,KAAAA,CAAIG,UAAcC,mCAAmBN,EAASM,EAAgB,KAC5DJ,EAAAA,cAAAA,KAAAA,CAAIG,UAAWC,GACbJ,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,KAAG,OAEdX,EAAAA,cAAAA,KAAAA,CAAIG,UAAWC,GACbJ,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,UAAQ,OAEnBX,EAAAA,cAAAA,KAAAA,CAAIG,UAAWC,GACbJ,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,eAAa,OAExBX,EAAAA,cAAAA,KAAAA,CAAIG,UAAWC,GACbJ,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,UAAQ,UAKzBX,EAAAA,cAAAA,OAAAA,CAAMG,UDtDM,8BCsDmBN,EAAMkB,UACrCf,EAAAA,cAAAA,SAAAA,MACC,C,+EC3BP,MAvBeH,IACb,MAAM,MAAEmB,GAAUnB,EAElB,OACEG,EAAAA,cAAAA,KAAAA,CAAIG,UCXc,iCDYfa,EAAMC,KAAKC,IAAI,mBACdlB,EAAAA,cAAAA,KAAAA,CAAImB,IAAKD,EAAKE,GAAIjB,UCfJ,iCDgBZH,EAAAA,cAAAA,MAAAA,CAAKG,UCfW,qCDgBdH,EAAAA,cAAAA,OAAAA,CAAMqB,UAAuB,QAAb,EAAAH,EAAKI,gBAAQ,aAAbC,EAAeC,OAAQ,eACvB,QAAb,EAAAN,EAAKI,gBAAQ,aAAbG,EAAeD,OAAQ,eAG5BxB,EAAAA,cAAAA,MAAAA,CAAKG,UClBQ,kCDmBXH,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAE,WAA+B,QAA/B,EAAYO,EAAKQ,sBAAc,aAAnBC,EAAqBC,MAAI,KAC7B,QADiC,EAC9CV,EAAKW,gBAAQ,aAAbC,EAAehB,QAGjB,IAEJ,C,gEEbT,UAXkBiB,IAAiD,IAAhD,KAAE9B,GAAyC,EAC5D,MAAMe,EAAQf,EAAK+B,YAAYC,MAC/B,OACEjC,EAAAA,cAACkC,EAAAA,EAAM,KACLlC,EAAAA,cAAAA,KAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAACmC,EAAAA,EAAK,CAACnB,MAAOA,IACP,C","sources":["webpack://notfound/./src/components/layout.module.css","webpack://notfound/./src/components/layout.tsx","webpack://notfound/./src/components/posts.tsx","webpack://notfound/./src/components/posts.module.css","webpack://notfound/./src/pages/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var active = \"layout-module--active--4be22\";\nexport var bar = \"layout-module--bar--2dd20\";\nexport var header = \"layout-module--header--4755c\";\nexport var main = \"layout-module--main--e5529\";\nexport var menuItem = \"layout-module--menuItem--5c914\";\nexport var menuList = \"layout-module--menuList--7a9b0\";\nexport var nav = \"layout-module--nav--7fd4b\";\nexport var navHeader = \"layout-module--navHeader--f24db\";\nexport var title = \"layout-module--title--2b201\";","import { graphql, Link, useStaticQuery } from \"gatsby\";\nimport React, { PropsWithChildren } from \"react\";\nimport * as styles from \"./layout.module.css\";\n\nconst Layout = (props: PropsWithChildren<{}>) => {\n  const [active, setActive] = React.useState<boolean>(false);\n\n  const data = useStaticQuery(graphql`\n    query SiteMetadata {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `);\n\n  const onClick = () => {\n    setActive(!active);\n    console.log(active)\n  };\n\n  return (\n    <>\n      <header className={styles.header}>\n        <nav className={styles.nav}>\n          <div className={styles.navHeader}>\n            <button\n              className={`${styles.bar} ${active ? styles.active : \"\"}`}\n              onClick={onClick}\n            >\n              <i\n                className=\"fa fa-bars\"\n                aria-hidden=\"true\"\n                style={{ color: \"white\" }}\n              ></i>\n            </button>\n            <div className={styles.title}>\n              <Link to=\"/\"> {data.site.siteMetadata.title} </Link>\n            </div>\n          </div>\n          <ul className={`${styles.menuList} ${active ? styles.active : \"\"}`}>\n            <li className={styles.menuItem}>\n              <Link to=\"/\">主页</Link>\n            </li>\n            <li className={styles.menuItem}>\n              <Link to=\"/posts\">归档</Link>\n            </li>\n            <li className={styles.menuItem}>\n              <Link to=\"/categories\">分类</Link>\n            </li>\n            <li className={styles.menuItem}>\n              <Link to=\"/about\">关于</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <main className={styles.main}>{props.children}</main>\n      <footer></footer>\n    </>\n  );\n};\n\nexport default Layout;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport * as styles from \"./posts.module.css\";\n\ntype PostsProps = {\n  posts: ReadonlyArray<\n    Pick<Queries.Asciidoc, \"id\" | \"document\" | \"revision\" | \"pageAttributes\">\n  >;\n};\n\nconst Posts = (props: PostsProps) => {\n  const { posts } = props;\n\n  return (\n    <ul className={styles.postList}>\n      {posts.map((post) => (\n        <li key={post.id} className={styles.postItem}>\n          <div className={styles.postItemMeta}>\n            <time dateTime={post.revision?.date || \"1970-01-01\"}>\n              {post.revision?.date || \"1970-01-01\"}\n            </time>\n          </div>\n          <div className={styles.postTitle}>\n            <Link to={`/posts/${post.pageAttributes?.slug}/`}>\n              {post.document?.title}\n            </Link>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Posts;\n","// extracted by mini-css-extract-plugin\nexport var postItem = \"posts-module--postItem--54570\";\nexport var postItemMeta = \"posts-module--postItemMeta--98358\";\nexport var postList = \"posts-module--postList--88986\";\nexport var postTitle = \"posts-module--postTitle--2c26f\";","import { graphql, PageProps } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport Posts from \"../components/posts\";\n\nconst IndexPage = ({ data }: PageProps<Queries.lastPostsQuery>) => {\n  const posts = data.allAsciidoc.nodes;\n  return (\n    <Layout>\n      <h1>概览</h1>\n      <br />\n      <Posts posts={posts} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const lastPostsQuery = graphql`\n  query lastPosts {\n    allAsciidoc(\n      sort: { revision: { date: DESC } }\n      filter: { pageAttributes: { draft: { ne: \"true\" } } }\n      limit: 6\n    ) {\n      nodes {\n        id\n        document {\n          main\n          subtitle\n          title\n        }\n        pageAttributes {\n          category\n          draft\n          slug\n        }\n        revision {\n          date\n          number\n          remark\n        }\n      }\n    }\n  }\n`;\n"],"names":["menuItem","props","active","setActive","React","data","useStaticQuery","className","styles","onClick","console","log","style","color","Link","to","site","siteMetadata","title","children","posts","map","post","key","id","dateTime","revision","_post$revision","date","_post$revision2","pageAttributes","_post$pageAttributes","slug","document","_post$document","_ref","allAsciidoc","nodes","Layout","Posts"],"sourceRoot":""}